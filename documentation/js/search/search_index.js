var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.087,1,0.716]],["body/components/AppComponent.html",[0,0.14,1,1.227,2,1.125,3,0.358,4,0.309,5,0.928,6,0.928,7,0.928,8,0.309,9,2.81,10,0.928,11,1.718,12,1.73,13,2.561,14,1.231,15,1.026,16,1.231,17,1.227,18,1.231,19,4.485,20,1.231,21,4.485,22,0.358,23,0.764,24,5.033,25,0.358,26,0.034,27,0.928,28,1.208,29,0.774,30,4.485,31,0.774,32,3.38,33,0.847,34,0.576,35,3.38,36,0.358,37,0.638,38,0.928,39,1.231,40,1.231,41,0.928,42,1.472,43,0.928,44,0.348,45,0.928,46,0.774,47,0.928,48,0.774,49,0.928,50,1.231,51,0.774,52,0.928,53,0.774,54,0.928,55,0.774,56,0.928,57,0.928,58,0.774,59,0.928,60,0.774,61,0.542,62,0.928,63,0.774,64,0.928,65,0.774,66,0.774,67,0.928,68,0.774,69,0.928,70,0.928,71,0.928,72,0.024,73,0.024]],["title/injectables/AuthService.html",[74,1.221,75,1.336]],["body/injectables/AuthService.html",[3,0.204,4,0.176,8,0.176,13,1.101,15,1.023,22,0.204,25,0.437,26,0.035,27,1.609,31,1.167,33,0.692,34,0.329,36,0.204,37,0.364,44,0.321,72,0.016,73,0.016,74,1.168,75,1.278,76,1.101,77,1.603,78,2.592,79,2.487,80,2.487,81,2.991,82,2.487,83,2.487,84,0.751,85,3.433,86,1.764,87,3.433,88,3.433,89,2.991,90,4.129,91,3.665,92,2.991,93,0.529,94,1.929,95,3.013,96,2.108,97,1.929,98,0.945,99,0.86,100,1.929,101,3.433,102,5.098,103,2.207,104,1.991,105,1.283,106,2.487,107,1.929,108,2.487,109,3.553,110,2.487,111,2.991,112,2.487,113,2.487,114,1.929,115,2.991,116,2.991,117,4.129,118,1.935,119,3.715,120,3.433,121,2.991,122,2.487,123,1.929,124,4.129,125,1.681,126,2.358,127,2.991,128,1.929,129,2.487,130,2.991,131,3.715,132,2.991,133,0.985,134,1.929,135,2.108,136,1.926,137,1.929,138,2.991,139,2.974,140,2.991,141,1.929,142,2.991,143,2.991,144,2.974,145,4.129,146,3.046,147,2.991,148,2.991,149,1.929,150,0.529,151,1.229,152,0.824,153,4.101,154,2.439,155,2.991,156,1.929,157,1.929,158,1.929,159,1.929,160,1.929,161,1.929,162,1.929,163,1.929,164,2.991,165,2.552,166,1.929,167,1.929,168,2.991,169,1.929,170,2.991,171,1.929]],["title/components/CategoriesComponent.html",[0,0.087,46,0.716]],["body/components/CategoriesComponent.html",[0,0.125,1,0.622,2,0.969,3,0.288,4,0.249,5,0.747,6,0.747,7,0.747,8,0.249,10,0.747,11,1.668,12,1.668,14,1.06,15,0.884,16,1.06,17,0.622,18,1.06,20,1.06,22,0.288,23,0.658,25,0.475,26,0.035,28,1.381,29,0.884,31,1.182,33,0.923,34,0.464,36,0.288,37,0.514,38,0.747,39,1.06,40,1.06,41,0.747,42,1.342,43,0.747,44,0.38,45,0.747,46,1.119,47,0.747,48,0.622,49,0.747,50,1.06,51,0.622,52,0.747,53,0.622,54,0.747,55,0.622,56,0.747,57,0.747,58,0.622,59,0.747,60,0.622,61,0.467,62,0.747,63,0.622,64,0.747,65,0.622,66,0.622,67,0.747,68,0.622,69,0.747,70,0.747,71,0.747,72,0.021,73,0.021,84,0.969,93,0.747,96,2.089,98,0.884,99,0.804,105,0.884,133,0.935,150,0.747,152,1.162,172,2.261,173,1.509,174,1.919,175,4.689,176,1.606,177,3.863,178,3.863,179,3.863,180,2.089,181,1.959,182,2.768,183,3.863,184,3.863,185,1.471,186,2.72,187,1.65,188,2.72,189,1.606,190,2.782,191,2.72,192,1.959,193,1.959,194,1.403,195,2.72,196,2.72,197,2.72,198,2.261,199,1.062,200,3.863,201,3.211,202,3.863,203,3.863]],["title/interfaces/Category.html",[189,1.118,204,1.024]],["body/interfaces/Category.html",[3,0.385,4,0.333,8,0.333,22,0.385,23,0.802,25,0.584,26,0.034,27,1.752,29,0.833,36,0.605,44,0.455,61,0.69,72,0.025,73,0.025,78,1.705,103,1.301,104,1.421,118,1.705,122,1.555,125,1.091,133,0.98,135,1.555,136,1.421,185,1.976,187,1.555,189,1.972,199,2.285,204,1.871,205,1.877,206,1.877,207,2.846,208,3.262,209,2.078,210,2.078,211,1.705,212,1.555,213,1.877,214,1.877,215,1.705,216,1.877,217,1.877]],["title/interfaces/CategoryComponentData.html",[204,1.024,211,1.465]],["body/interfaces/CategoryComponentData.html",[3,0.386,4,0.334,8,0.334,22,0.386,23,0.804,25,0.553,26,0.034,27,1.733,29,0.835,36,0.605,44,0.406,61,0.691,72,0.025,73,0.025,78,1.709,99,1.219,103,1.304,104,1.424,118,1.709,122,1.558,125,1.094,133,0.982,135,1.558,136,1.424,185,1.977,187,2.359,189,2.159,199,2.04,204,1.872,205,1.882,206,1.882,207,1.882,208,2.692,209,2.083,210,2.083,211,2.209,212,2.359,213,1.882,214,1.882,215,1.709,216,1.882,217,1.882]],["title/components/EditProfileComponent.html",[0,0.087,48,0.716]],["body/components/EditProfileComponent.html",[0,0.113,1,0.52,2,0.85,3,0.24,4,0.208,5,0.624,6,0.624,7,0.624,8,0.208,10,0.624,11,1.62,12,1.62,14,0.93,15,0.776,16,0.93,17,0.52,18,0.93,20,0.93,22,0.24,23,0.578,25,0.429,26,0.035,31,1.153,33,0.951,34,0.387,36,0.24,37,0.429,38,0.624,39,0.93,40,0.93,41,0.624,42,1.233,43,0.624,44,0.315,45,0.624,46,0.52,47,0.624,48,1.028,49,1.433,50,0.93,51,0.52,52,0.624,53,0.52,54,0.624,55,0.52,56,0.624,57,0.624,58,0.52,59,0.624,60,0.52,61,0.409,62,0.624,63,0.52,64,0.624,65,0.52,66,0.52,67,0.624,68,0.52,69,0.624,70,0.624,71,0.624,72,0.018,73,0.018,75,2.231,84,0.85,86,1.731,93,0.93,96,2.231,98,0.52,99,0.473,103,1.449,105,0.927,125,1.609,133,1.049,135,2.293,136,1.754,144,2.441,146,1.889,150,0.624,154,1.172,173,1.323,174,1.731,176,1.449,180,1.919,218,4.341,219,4.341,220,1.889,221,2.314,222,2.582,223,2.817,224,2.817,225,4.052,226,4.492,227,4.492,228,2.272,229,3.211,230,3.389,231,2.272,232,2.272,233,2.272,234,2.314,235,2.272,236,1.297,237,1.448,238,1.297,239,1.065,240,1.448,241,1.889,242,2.272,243,2.272,244,2.582,245,1.448,246,1.889,247,2.272,248,1.636,249,2.272,250,2.272,251,2.272,252,2.272,253,2.272,254,2.272,255,2.272,256,2.272,257,2.272,258,3.211,259,2.817,260,2.441,261,2.441,262,2.159,263,2.159,264,2.817,265,2.441,266,2.272,267,2.817,268,2.817,269,2.272,270,3.389,271,3.389,272,2.272,273,2.272]],["title/components/FooterComponent.html",[0,0.087,51,0.716]],["body/components/FooterComponent.html",[0,0.142,1,0.798,2,1.149,3,0.369,4,0.319,5,0.958,6,0.958,7,0.958,8,0.319,10,0.958,11,1.724,12,1.724,14,1.257,15,1.048,16,0.958,17,0.798,18,1.257,20,1.257,26,0.034,33,0.659,34,0.595,36,0.369,37,0.659,38,0.958,39,1.257,40,1.257,41,0.958,42,1.49,43,0.958,44,0.356,45,0.958,46,0.798,47,0.958,48,0.798,49,0.958,50,1.257,51,1.242,52,0.958,53,0.798,54,0.958,55,0.798,56,0.958,57,0.958,58,0.798,59,0.958,60,0.798,61,0.553,62,0.958,63,0.798,64,0.958,65,0.798,66,0.798,67,0.958,68,0.798,69,0.958,70,0.958,71,0.958,72,0.025,73,0.025,274,2.9,275,4.579,276,4.579,277,4.579,278,3.488,279,4.579,280,3.298,281,3.298,282,4.579,283,4.579]],["title/components/HeaderComponent.html",[0,0.087,53,0.716]],["body/components/HeaderComponent.html",[0,0.127,1,0.642,2,0.991,3,0.297,4,0.257,5,0.77,6,0.77,7,0.77,8,0.257,10,0.77,11,1.675,12,1.675,14,1.084,15,0.904,16,1.084,17,0.642,18,1.084,20,1.084,22,0.297,25,0.418,26,0.034,27,1.084,28,1.003,29,0.642,31,1.196,33,0.936,34,0.478,36,0.297,37,0.53,38,0.77,39,1.084,40,1.084,41,0.77,42,1.361,43,0.77,44,0.355,45,0.77,46,0.642,47,0.77,48,0.642,49,0.77,50,1.084,51,0.642,52,0.77,53,1.135,54,0.77,55,0.642,56,0.77,57,0.77,58,0.642,59,0.77,60,0.642,61,0.477,62,0.77,63,0.642,64,0.77,65,0.642,66,0.642,67,0.77,68,0.642,69,1.254,70,0.77,71,0.77,72,0.021,73,0.021,75,2.316,84,0.991,85,4.122,88,4.122,93,0.77,98,0.642,99,0.584,105,1.046,118,1.85,126,2.254,133,0.584,150,0.77,152,1.199,165,2.254,176,1.633,212,1.687,221,2.609,236,1.602,239,1.314,248,2.02,280,2.844,281,2.844,284,2.332,285,3.948,286,3.948,287,3.948,288,5.42,289,3.948,290,4.344,291,2.332,292,3.948,293,3.282,294,2.805,295,2.805,296,2.805,297,3.948,298,2.805,299,2.805,300,3.948,301,3.282,302,2.516]],["title/components/HomeComponent.html",[0,0.087,55,0.716]],["body/components/HomeComponent.html",[0,0.117,1,0.557,2,0.894,3,0.257,4,0.222,5,0.668,6,0.668,7,0.668,8,0.222,10,0.668,11,1.639,12,1.639,14,0.978,15,0.816,16,0.978,17,0.557,18,0.978,20,0.978,26,0.032,33,0.673,34,0.415,36,0.257,37,0.459,38,0.668,39,0.978,40,0.978,41,0.668,42,1.275,43,0.668,44,0.277,45,0.668,46,0.557,47,0.668,48,0.557,49,0.668,50,0.978,51,0.557,52,0.668,53,0.557,54,0.668,55,1.063,56,0.668,57,0.668,58,0.557,59,0.668,60,0.557,61,0.431,62,0.668,63,0.557,64,0.668,65,0.557,66,0.557,67,0.668,68,0.557,69,0.668,70,0.668,71,0.668,72,0.019,73,0.019,125,1.069,150,0.668,176,1.508,207,2.928,280,4.088,281,4.088,293,3.86,301,2.963,303,2.022,304,3.564,305,3.564,306,4.644,307,3.564,308,3.564,309,3.564,310,3.564,311,3.564,312,3.564,313,4.644,314,3.564,315,4.644,316,3.564,317,5.676,318,3.564,319,4.644,320,3.564,321,3.564,322,3.564,323,3.564,324,3.564,325,3.564,326,3.564,327,3.564,328,3.564,329,3.564,330,3.564,331,2.432,332,3.564,333,3.564,334,3.564,335,3.564,336,3.564,337,3.564,338,3.564,339,3.564,340,3.564,341,3.564,342,2.432,343,3.564,344,3.564,345,3.564,346,3.564,347,3.564,348,3.564,349,3.564,350,3.564,351,3.564,352,3.564,353,3.564,354,3.564,355,3.564,356,3.564,357,3.564,358,3.564,359,3.564,360,3.564,361,3.564,362,2.567,363,3.564,364,3.564,365,3.564,366,2.432,367,3.564,368,3.564,369,3.564,370,3.564,371,3.564,372,3.564,373,3.564,374,3.564,375,3.564,376,2.432,377,2.432,378,2.432]],["title/components/LayoutComponent.html",[0,0.087,17,0.716]],["body/components/LayoutComponent.html",[0,0.141,1,0.784,2,1.135,3,0.362,4,0.313,5,0.94,6,0.94,7,0.94,8,0.313,10,0.94,11,1.72,12,1.72,14,1.242,15,1.036,16,1.242,17,1.233,18,1.242,20,1.242,26,0.034,33,1.018,34,0.584,36,0.362,37,0.647,38,0.94,39,1.242,40,1.242,41,0.94,42,1.479,43,0.94,44,0.352,45,0.94,46,0.784,47,0.94,48,0.784,49,0.94,50,1.242,51,1.233,52,0.94,53,1.233,54,0.94,55,0.784,56,0.94,57,0.94,58,0.784,59,0.94,60,0.784,61,0.547,62,0.94,63,0.784,64,0.94,65,0.784,66,0.784,67,0.94,68,0.784,69,0.94,70,0.94,71,0.94,72,0.024,73,0.024,150,0.94,379,2.848,380,4.525,381,5.067,382,4.525,383,4.525,384,3.425,385,3.425]],["title/components/LoginComponent.html",[0,0.087,58,0.716]],["body/components/LoginComponent.html",[0,0.115,1,0.537,2,0.871,3,0.248,4,0.215,5,0.644,6,0.644,7,0.644,8,0.215,10,0.644,11,1.629,12,1.629,14,0.952,15,0.794,16,0.952,17,0.537,18,0.952,20,0.952,22,0.248,23,0.591,25,0.437,26,0.035,31,1.115,33,0.92,34,0.4,36,0.248,37,0.443,38,0.644,39,0.952,40,0.952,41,0.644,42,1.253,43,0.644,44,0.355,45,0.644,46,0.537,47,0.644,48,0.537,49,0.644,50,0.952,51,0.537,52,0.644,53,0.537,54,0.644,55,0.537,56,0.644,57,0.644,58,1.044,59,0.644,60,0.537,61,0.419,62,0.644,63,0.537,64,0.644,65,0.537,66,0.537,67,0.644,68,0.537,69,1.134,70,0.644,71,0.644,72,0.019,73,0.019,75,2.254,84,0.871,86,1.95,93,0.952,96,2.254,98,0.794,99,0.723,105,0.945,109,1.69,122,2.439,125,1.624,126,2.606,133,1.062,150,0.644,154,1.21,173,1.355,174,1.764,176,1.476,180,1.95,221,2.358,222,2.632,229,2.908,234,3.093,236,1.339,237,1.495,238,1.339,239,1.099,244,2.211,245,1.495,258,2.908,260,2.499,261,2.499,262,2.211,263,2.211,302,2.908,386,1.95,387,3.47,388,3.47,389,4.13,390,2.885,391,3.287,392,1.69,393,2.974,394,3.287,395,3.47,396,2.499,397,2.885,398,2.346,399,2.346,400,2.346,401,2.346,402,1.69,403,1.95,404,2.346,405,2.346,406,2.346,407,1.95,408,2.346,409,1.95,410,1.95,411,1.95,412,1.95,413,1.95,414,2.499,415,2.885,416,2.346,417,3.47,418,2.885,419,2.346]],["title/interfaces/Product.html",[61,0.378,204,1.024]],["body/interfaces/Product.html",[3,0.373,4,0.322,8,0.322,22,0.373,23,0.785,25,0.614,26,0.034,27,1.754,29,0.806,36,0.598,44,0.451,61,0.658,72,0.025,73,0.025,78,2.553,103,1.259,104,1.375,118,1.65,122,1.504,125,1.056,133,0.959,135,1.504,136,1.375,185,2.031,187,1.504,189,1.836,199,2.265,204,1.851,205,1.816,206,1.816,207,1.816,208,3.228,209,3.11,210,3.11,211,1.65,212,1.504,213,1.816,214,1.816,215,1.65,216,1.816,217,1.816]],["title/components/ProductDetailComponent.html",[0,0.087,60,0.716]],["body/components/ProductDetailComponent.html",[0,0.113,1,0.52,2,0.85,3,0.24,4,0.208,5,0.624,6,0.624,7,0.624,8,0.208,10,0.624,11,1.62,12,1.62,14,0.93,15,0.776,16,0.93,17,0.52,18,0.93,20,0.93,22,0.24,23,0.578,25,0.475,26,0.035,27,0.93,28,1.606,29,1.028,31,1.278,33,0.907,34,0.387,36,0.24,37,0.429,38,0.624,39,0.93,40,0.93,41,0.624,42,1.233,43,0.624,44,0.315,45,0.624,46,0.52,47,0.624,48,0.52,49,0.624,50,0.93,51,0.52,52,0.624,53,0.52,54,0.624,55,0.52,56,0.624,57,0.624,58,0.52,59,0.624,60,1.028,61,0.74,62,0.624,63,0.52,64,0.624,65,0.52,66,0.52,67,0.624,68,0.52,69,0.624,70,0.624,71,0.624,72,0.018,73,0.018,84,0.85,93,0.624,96,1.919,98,0.52,99,1.001,105,0.927,133,1.001,150,0.624,152,0.971,173,1.323,174,1.731,176,1.449,180,1.919,181,1.636,182,2.6,185,1.11,190,2.441,192,1.636,193,1.636,194,1.172,239,1.065,290,3.369,420,4.082,421,4.711,422,1.889,423,3.389,424,3.389,425,3.389,426,4.492,427,2.919,428,3.369,429,3.735,430,4.492,431,3.389,432,2.272,433,2.272,434,2.272,435,3.389,436,3.389,437,2.272,438,3.369,439,2.272,440,2.272,441,2.817,442,2.272,443,2.272,444,1.889,445,1.889,446,3.389,447,1.889,448,2.272,449,2.272,450,2.272,451,2.159,452,1.889,453,1.889,454,2.272,455,3.389,456,3.389,457,3.389,458,2.817,459,3.389,460,2.817]],["title/components/ProductListComponent.html",[0,0.087,63,0.716]],["body/components/ProductListComponent.html",[0,0.111,1,0.511,2,0.839,3,0.236,4,0.204,5,0.613,6,0.613,7,0.613,8,0.204,10,0.613,11,1.615,12,1.615,14,0.918,15,0.765,16,0.918,17,0.511,18,0.918,20,0.918,22,0.236,23,0.57,25,0.471,26,0.035,28,1.433,29,0.918,31,1.249,33,0.841,34,0.38,36,0.236,37,0.421,38,0.613,39,0.918,40,0.918,41,0.613,42,1.222,43,0.613,44,0.346,45,0.613,46,0.511,47,0.613,48,0.511,49,0.613,50,0.918,51,0.511,52,0.613,53,0.511,54,0.613,55,0.511,56,0.613,57,0.613,58,0.511,59,0.613,60,0.511,61,0.691,62,0.613,63,1.019,64,0.613,65,0.511,66,0.511,67,0.613,68,0.511,69,0.613,70,0.613,71,0.613,72,0.018,73,0.018,84,0.839,93,0.613,96,1.902,98,0.765,99,0.927,105,1.019,108,2.78,133,1.042,150,0.613,152,0.954,173,1.306,174,1.713,176,1.433,180,1.902,181,1.608,182,2.582,185,1.562,187,1.902,189,0.798,190,2.408,192,1.608,193,1.608,194,1.151,198,1.856,199,0.872,201,2.78,212,2.375,420,4.004,427,2.408,428,3.333,429,3.702,441,2.78,444,1.856,445,1.856,447,2.78,451,2.131,452,1.856,453,1.856,458,2.78,460,2.78,461,4.622,462,1.856,463,3.344,464,3.344,465,3.344,466,4.453,467,3.344,468,2.232,469,3.344,470,2.232,471,2.232,472,2.232,473,2.232,474,2.232,475,2.232,476,4.01,477,2.232,478,2.232,479,2.232,480,2.232,481,2.232,482,2.232,483,3.344,484,3.344,485,3.344,486,3.344,487,3.344,488,3.344]],["title/injectables/ProductService.html",[74,1.221,182,1.613]],["body/injectables/ProductService.html",[3,0.241,4,0.371,8,0.208,13,1.299,22,0.241,23,0.578,25,0.509,26,0.035,27,0.625,28,0.813,29,0.521,31,1.154,33,0.849,34,0.388,36,0.241,37,0.43,44,0.349,61,0.713,72,0.018,73,0.018,74,1.325,76,1.299,78,2.107,79,2.82,80,2.82,82,2.82,83,2.82,84,0.851,86,2.154,93,0.625,98,1.029,99,0.936,101,4.192,105,1.229,106,3.737,110,3.998,112,3.737,120,2.82,151,1.45,152,0.972,153,3.372,154,1.75,165,2.879,175,3.372,182,1.75,185,1.651,187,1.733,189,1.962,194,1.174,199,1.969,212,1.921,427,2.921,438,3.372,451,3.421,489,1.892,490,3.392,491,3.372,492,4.496,493,3.392,494,3.392,495,3.392,496,1.892,497,3.737,498,3.392,499,4.192,500,2.276,501,3.392,502,4.908,503,3.392,504,2.276,505,3.392,506,3.392,507,3.392,508,2.276,509,3.392,510,3.392,511,3.392,512,3.392,513,2.276,514,3.392,515,2.82,516,3.392,517,3.392,518,3.392,519,3.392,520,1.892,521,1.892,522,1.892,523,1.892,524,1.639,525,4.056,526,4.056,527,4.056,528,4.056,529,2.276,530,2.276,531,4.056,532,2.276,533,2.276,534,2.276,535,2.276,536,2.276,537,4.056,538,2.276,539,2.276,540,2.276,541,2.276,542,2.276]],["title/components/ProfileComponent.html",[0,0.087,65,0.716]],["body/components/ProfileComponent.html",[0,0.131,1,0.684,2,1.035,3,0.316,4,0.273,5,0.82,6,0.82,7,0.82,8,0.273,10,0.82,11,1.69,12,1.69,14,1.132,15,0.944,16,1.132,17,0.684,18,1.132,20,1.132,22,0.316,23,0.703,25,0.437,26,0.034,31,1.081,33,0.892,34,0.509,36,0.316,37,0.564,38,0.82,39,1.132,40,1.132,41,0.82,42,1.399,43,0.82,44,0.415,45,0.82,46,0.684,47,0.82,48,0.684,49,1.297,50,1.132,51,0.684,52,0.82,53,0.684,54,0.82,55,0.684,56,0.82,57,0.82,58,0.684,59,0.82,60,0.684,61,0.498,62,0.82,63,0.684,64,0.82,65,1.166,66,0.684,67,0.82,68,0.684,69,0.82,70,0.82,71,0.82,72,0.022,73,0.022,75,2.362,84,1.035,93,0.82,98,0.684,99,0.622,105,0.684,125,1.237,131,3.928,133,0.859,136,1.611,144,3.67,150,0.82,152,1.276,173,1.611,174,2.019,176,1.689,180,2.177,223,3.429,224,3.429,236,1.706,248,2.152,291,2.484,543,2.484,544,4.125,545,2.987,546,2.987,547,4.125,548,4.125,549,4.125]],["title/components/RecoverComponent.html",[0,0.087,66,0.716]],["body/components/RecoverComponent.html",[0,0.113,1,0.522,2,0.853,3,0.242,4,0.209,5,0.626,6,0.626,7,0.626,8,0.209,10,0.626,11,1.621,12,1.621,14,0.933,15,0.778,16,0.933,17,0.522,18,0.933,20,0.933,22,0.242,23,0.58,25,0.581,26,0.035,27,1.322,28,1.215,29,0.778,31,1.197,33,0.85,34,0.389,36,0.242,37,0.431,38,0.626,39,0.933,40,0.933,41,0.626,42,1.236,43,0.626,44,0.35,45,0.626,46,0.522,47,0.626,48,0.522,49,0.626,50,0.933,51,0.522,52,0.626,53,0.522,54,0.626,55,0.522,56,0.626,57,0.626,58,0.522,59,0.626,60,0.522,61,0.411,62,0.626,63,0.522,64,0.626,65,0.522,66,1.03,67,0.626,68,0.522,69,0.626,70,0.626,71,0.626,72,0.018,73,0.018,84,0.853,86,1.736,93,0.933,96,2.234,98,0.778,99,0.708,105,0.93,125,1.612,126,1.941,133,0.938,150,0.626,173,1.328,174,1.736,176,1.453,180,1.924,221,2.32,222,2.589,229,2.869,234,2.32,237,1.454,238,1.303,239,1.069,244,1.454,245,1.454,258,2.167,262,2.167,263,2.167,302,2.167,362,2.449,391,3.243,392,1.644,393,2.927,394,3.243,396,2.449,402,1.644,414,2.449,418,3.743,451,3.068,550,1.897,551,3.4,552,3.4,553,5.374,554,4.063,555,4.063,556,3.4,557,3.4,558,2.282,559,3.4,560,5.374,561,2.282,562,2.282,563,2.282,564,2.282,565,2.282,566,2.282,567,2.282,568,1.897,569,1.897,570,2.282,571,2.282,572,2.282,573,2.282,574,2.282,575,2.282,576,2.282,577,3.4,578,2.282,579,2.282,580,1.897,581,2.282,582,2.282,583,2.282,584,3.4]],["title/components/RegisterComponent.html",[0,0.087,68,0.716]],["body/components/RegisterComponent.html",[0,0.102,1,0.442,2,0.751,3,0.204,4,0.177,5,0.53,6,0.53,7,0.53,8,0.177,10,0.53,11,1.572,12,1.572,14,0.822,15,0.685,16,0.822,17,0.442,18,0.822,20,0.822,22,0.204,23,0.51,25,0.388,26,0.035,31,1.083,33,0.932,34,0.329,36,0.204,37,0.365,38,0.53,39,0.822,40,0.822,41,0.53,42,1.134,43,0.53,44,0.321,45,0.53,46,0.442,47,0.53,48,0.442,49,0.53,50,0.822,51,0.442,52,0.53,53,0.442,54,0.53,55,0.442,56,0.53,57,0.53,58,0.442,59,0.53,60,0.442,61,0.362,62,0.53,63,0.442,64,0.53,65,0.442,66,0.442,67,0.53,68,0.946,69,1.227,70,0.53,71,0.53,72,0.016,73,0.016,75,2.109,84,0.751,86,1.765,93,0.822,96,2.109,98,0.685,99,0.985,105,0.946,109,1.391,119,3.049,122,2.469,125,1.571,126,1.71,133,1.028,135,2.237,136,1.746,150,0.53,154,0.996,173,1.169,174,1.567,176,1.311,180,1.765,213,1.545,221,2.094,222,2.337,229,2.633,234,2.912,236,1.103,237,1.231,238,1.103,239,0.905,240,1.231,241,1.605,244,2.849,245,1.231,246,1.605,258,3.41,259,2.489,260,3.407,261,3.407,262,1.908,263,1.908,264,2.489,265,2.157,267,2.489,268,2.489,302,1.908,390,2.489,391,2.976,392,1.391,393,2.641,394,2.976,396,2.157,397,2.489,402,1.391,403,2.489,407,1.605,409,1.605,410,1.605,411,1.605,412,1.605,413,1.605,414,2.976,415,3.435,515,1.605,568,1.605,569,1.605,585,1.605,586,2.994,587,2.994,588,3.667,589,4.132,590,2.994,591,1.931,592,1.931,593,1.931,594,1.931,595,2.157,596,1.931,597,1.931,598,1.931,599,2.994,600,2.994,601,2.994,602,1.931,603,1.931,604,1.931,605,1.931,606,1.931,607,1.931,608,1.931,609,2.994,610,2.994,611,2.994,612,1.931,613,1.931,614,2.994,615,2.994,616,2.994,617,1.931,618,1.931]],["title/interfaces/Storage.html",[104,1.221,204,1.024]],["body/interfaces/Storage.html",[3,0.362,4,0.313,8,0.313,22,0.362,25,0.536,26,0.034,27,1.76,29,1.16,31,1.16,36,0.593,44,0.447,61,0.612,72,0.024,73,0.024,78,1.605,84,1.135,98,1.16,99,1.055,103,1.225,104,1.767,105,1.16,118,1.605,122,1.464,125,1.027,133,1.122,135,1.464,136,1.338,185,1.885,187,1.464,189,1.811,199,1.979,204,1.835,205,1.767,206,1.767,207,1.767,208,2.584,209,1.956,210,1.956,211,1.605,212,1.464,213,1.767,214,2.334,215,2.12,216,2.334,217,2.334,619,3.762,620,3.762,621,3.762,622,3.425,623,4.212,624,3.425,625,3.425]],["title/injectables/StorageService.html",[74,1.221,95,1.993]],["body/injectables/StorageService.html",[3,0.335,4,0.289,8,0.289,13,1.805,22,0.335,23,0.731,25,0.552,26,0.035,27,1.674,28,1.13,29,1.248,31,1.248,33,0.81,34,0.539,36,0.335,37,0.597,44,0.378,72,0.023,73,0.023,74,1.675,76,1.805,84,1.076,86,2.079,93,1.336,95,2.733,98,1.114,99,1.013,104,2.247,105,1.114,133,1.087,151,2.015,154,2.212,165,1.805,194,1.631,214,2.212,215,2.636,216,2.212,217,2.212,619,4.046,620,4.046,621,4.046,623,4.676,626,2.628,627,4.288,628,3.162,629,3.162,630,3.162,631,3.162,632,3.162,633,3.162,634,3.162,635,2.628,636,3.162,637,4.288,638,3.162,639,3.162,640,3.162,641,3.162,642,3.162,643,3.162,644,3.162,645,3.162,646,3.162,647,4.288,648,3.162,649,3.162,650,3.162]],["title/interfaces/User.html",[103,1.118,204,1.024]],["body/interfaces/User.html",[3,0.367,4,0.317,8,0.317,22,0.367,23,0.777,25,0.623,26,0.034,27,1.764,29,0.793,36,0.595,44,0.449,61,0.616,72,0.024,73,0.024,78,1.623,103,1.63,104,1.353,118,2.387,122,2.313,125,1.624,133,0.949,135,2.313,136,2.114,185,1.956,187,1.48,189,1.821,199,2.255,204,1.842,205,1.787,206,1.787,207,1.787,208,2.603,209,1.978,210,1.978,211,1.623,212,1.48,213,2.792,214,1.787,215,1.623,216,1.787,217,1.787]],["title/injectables/UserService.html",[74,1.221,651,2.252]],["body/injectables/UserService.html",[3,0.387,4,0.334,8,0.334,13,2.088,22,0.387,23,0.805,25,0.553,26,0.035,27,1.004,28,1.307,29,0.837,31,1.265,33,1.043,34,0.623,36,0.387,37,0.69,44,0.367,72,0.025,73,0.025,74,1.844,76,2.088,84,1.185,86,2.234,87,4.595,93,1.004,98,1.081,99,0.983,103,1.307,105,1.081,151,2.33,152,1.562,165,2.696,185,1.712,194,1.886,199,1.428,491,4.347,496,3.04,497,4.595,499,3.925,502,4.757,520,3.04,521,3.04,522,3.04,523,3.04,524,2.633,651,3.401,652,3.04,653,4.722,654,4.722,655,4.722,656,3.656,657,3.656,658,4.722,659,3.656,660,3.656]],["title/coverage.html",[661,3.538]],["body/coverage.html",[0,0.17,1,0.716,8,0.286,9,2.601,17,0.716,25,0.331,26,0.034,46,0.716,48,0.716,51,0.716,53,0.716,55,0.716,58,0.716,60,0.716,61,0.378,63,0.716,65,0.716,66,0.716,68,0.716,72,0.023,73,0.023,74,2.029,75,1.337,77,2.601,95,1.994,103,1.119,104,1.222,139,2.254,172,2.601,182,1.614,189,1.119,204,1.78,206,2.804,211,1.466,218,2.601,219,2.601,220,2.601,240,1.994,274,2.601,284,2.601,303,2.601,379,2.601,386,2.601,420,3.067,421,2.601,422,2.601,461,2.601,462,2.601,489,2.601,543,2.601,550,2.601,585,2.601,595,2.254,626,2.601,651,2.254,652,2.601,661,2.601,662,3.129,663,3.129,664,3.129,665,6.385,666,3.129,667,3.54,668,5.196,669,2.601,670,5.92,671,2.601,672,2.601,673,2.601,674,5.196,675,4.841,676,3.129,677,3.129,678,4.841,679,4.258,680,4.258,681,3.129,682,3.129,683,3.129,684,3.129,685,2.601,686,4.258,687,2.601,688,2.601,689,2.254,690,3.129,691,3.129]],["title/dependencies.html",[692,1.885,693,3.124]],["body/dependencies.html",[26,0.035,34,0.72,72,0.028,73,0.028,150,1.16,238,2.413,239,1.98,265,3.044,524,3.044,689,3.044,693,3.514,694,4.226,695,6.262,696,4.226,697,5.589,698,5.172,699,4.226,700,3.514,701,4.226,702,3.514,703,4.226,704,4.226,705,4.226,706,4.226,707,4.226,708,4.226,709,4.226,710,4.226,711,4.226,712,4.226,713,4.226,714,4.226]],["title/miscellaneous/functions.html",[715,1.668,716,3.124]],["body/miscellaneous/functions.html",[22,0.474,25,0.567,26,0.033,44,0.416,72,0.029,73,0.029,98,1.225,99,1.115,105,1.225,185,1.753,215,2.097,234,3.057,240,3.412,595,3.856,685,3.721,687,3.721,715,2.852,716,3.721,717,4.476,718,4.476,719,4.476,720,4.476,721,4.476,722,4.476,723,4.476,724,4.476]],["title/index.html",[22,0.277,725,2.617,726,2.617]],["body/index.html",[0,0.147,4,0.344,26,0.026,44,0.292,72,0.026,73,0.026,113,3.122,129,3.122,139,2.705,173,1.467,362,2.705,635,3.122,692,2.705,700,3.994,702,3.122,727,3.756,728,4.804,729,3.756,730,5.296,731,5.296,732,3.122,733,3.756,734,5.77,735,5.999,736,3.756,737,3.756,738,3.756,739,3.756,740,3.756,741,3.756,742,3.756,743,3.756,744,3.756,745,3.756,746,3.756,747,5.296,748,5.296,749,3.756,750,5.583,751,3.756,752,3.756,753,3.756,754,4.804,755,4.804,756,5.583,757,4.804,758,4.804,759,3.756,760,5.902,761,3.756,762,3.756,763,3.756,764,4.804,765,3.756,766,3.756,767,3.756,768,3.756,769,3.756,770,3.756,771,5.296,772,3.756,773,3.756,774,2.705,775,3.756,776,3.756]],["title/modules.html",[777,3.538]],["body/modules.html",[26,0.031,72,0.031,73,0.031,777,4.162]],["title/overview.html",[774,3.066]],["body/overview.html",[2,1.232,26,0.03,72,0.03,73,0.03,76,2.803,205,2.533,580,4.082,774,3.536,778,4.91,779,4.91]],["title/properties.html",[23,0.641,692,1.885]],["body/properties.html",[23,0.845,26,0.032,72,0.031,73,0.031,732,4.122,780,4.958]],["title/miscellaneous/variables.html",[715,1.668,781,3.124]],["body/miscellaneous/variables.html",[15,0.959,22,0.444,25,0.545,26,0.035,28,2.076,29,1.329,72,0.028,73,0.028,667,3.484,669,4.629,671,4.629,672,3.484,673,4.278,688,3.484,689,3.706,715,2.671,781,3.484,782,4.191,783,4.191,784,5.146,785,5.146,786,5.146,787,4.191,788,4.191,789,4.191,790,4.191,791,4.191,792,4.191,793,4.191,794,4.191]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":780,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":670,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":678,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["1.1.25",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":460,"title":{},"body":{"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["123",{"_index":373,"title":{},"body":{"components/HomeComponent.html":{}}}],["13",{"_index":778,"title":{},"body":{"overview.html":{}}}],["18.0.0",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["18.0.3",{"_index":702,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["2.3.0",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["2024",{"_index":279,"title":{},"body":{"components/FooterComponent.html":{}}}],["3",{"_index":259,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["3.6.0",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":779,"title":{},"body":{"overview.html":{}}}],["4.18.2",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["456",{"_index":374,"title":{},"body":{"components/HomeComponent.html":{}}}],["5",{"_index":580,"title":{},"body":{"components/RecoverComponent.html":{},"overview.html":{}}}],["5.3.3",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":583,"title":{},"body":{"components/RecoverComponent.html":{}}}],["6",{"_index":415,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["7.8.0",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["7890",{"_index":375,"title":{},"body":{"components/HomeComponent.html":{}}}],["8/9",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["__test__",{"_index":633,"title":{},"body":{"injectables/StorageService.html":{}}}],["aaa",{"_index":336,"title":{},"body":{"components/HomeComponent.html":{}}}],["access",{"_index":530,"title":{},"body":{"injectables/ProductService.html":{}}}],["account",{"_index":302,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["activatedroute",{"_index":444,"title":{},"body":{"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["actual_component",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["add",{"_index":767,"title":{},"body":{"index.html":{}}}],["address",{"_index":414,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["admin",{"_index":614,"title":{},"body":{"components/RegisterComponent.html":{}}}],["adventure",{"_index":310,"title":{},"body":{"components/HomeComponent.html":{}}}],["ages",{"_index":328,"title":{},"body":{"components/HomeComponent.html":{}}}],["agevalidator",{"_index":240,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["agevalidator(14",{"_index":246,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["agevalidator(minage",{"_index":719,"title":{},"body":{"miscellaneous/functions.html":{}}}],["already",{"_index":616,"title":{},"body":{"components/RegisterComponent.html":{}}}],["angular",{"_index":730,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":239,"title":{},"body":{"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":520,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":238,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":673,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":740,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["array",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["artifacts",{"_index":751,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":75,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":741,"title":{},"body":{"index.html":{}}}],["available",{"_index":642,"title":{},"body":{"injectables/StorageService.html":{}}}],["back",{"_index":584,"title":{},"body":{"components/RecoverComponent.html":{}}}],["belonging",{"_index":509,"title":{},"body":{"injectables/ProductService.html":{}}}],["best",{"_index":322,"title":{},"body":{"components/HomeComponent.html":{}}}],["birth",{"_index":264,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["birthdate",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{}}}],["boolean",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/HeaderComponent.html":{},"interfaces/Product.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{}}}],["bootstrap",{"_index":689,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browser",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":750,"title":{},"body":{"index.html":{}}}],["c",{"_index":533,"title":{},"body":{"injectables/ProductService.html":{}}}],["c.id",{"_index":534,"title":{},"body":{"injectables/ProductService.html":{}}}],["call",{"_index":517,"title":{},"body":{"injectables/ProductService.html":{}}}],["capabilities",{"_index":769,"title":{},"body":{"index.html":{}}}],["casual",{"_index":338,"title":{},"body":{"components/HomeComponent.html":{}}}],["cat.id",{"_index":202,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["cat.name",{"_index":203,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["catch",{"_index":639,"title":{},"body":{"injectables/StorageService.html":{}}}],["catcherror",{"_index":522,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["catcherror(this.handleerror",{"_index":531,"title":{},"body":{"injectables/ProductService.html":{}}}],["categories",{"_index":175,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ProductService.html":{}}}],["categories'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["categories.component.html",{"_index":177,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.scss",{"_index":178,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categoriescomponent",{"_index":46,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["category",{"_index":189,"title":{"interfaces/Category.html":{}},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["category.games",{"_index":535,"title":{},"body":{"injectables/ProductService.html":{}}}],["category.games.find((p",{"_index":538,"title":{},"body":{"injectables/ProductService.html":{}}}],["categorycomponentdata",{"_index":211,"title":{"interfaces/CategoryComponentData.html":{}},"body":{"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["categoryid",{"_index":187,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{}}}],["change",{"_index":743,"title":{},"body":{"index.html":{}}}],["changes",{"_index":271,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["characters",{"_index":260,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["check",{"_index":773,"title":{},"body":{"index.html":{}}}],["checks",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{}}}],["choice",{"_index":763,"title":{},"body":{"index.html":{}}}],["choosing",{"_index":365,"title":{},"body":{"components/HomeComponent.html":{}}}],["class",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}}}],["clear",{"_index":579,"title":{},"body":{"components/RecoverComponent.html":{}}}],["cli",{"_index":731,"title":{},"body":{"index.html":{}}}],["code",{"_index":745,"title":{},"body":{"index.html":{}}}],["come",{"_index":347,"title":{},"body":{"components/HomeComponent.html":{}}}],["command",{"_index":764,"title":{},"body":{"index.html":{}}}],["commitment",{"_index":357,"title":{},"body":{"components/HomeComponent.html":{}}}],["commonmodule",{"_index":221,"title":{},"body":{"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["community",{"_index":346,"title":{},"body":{"components/HomeComponent.html":{}}}],["compodoc/compodoc",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["components/shared/layout/layout.component",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["config",{"_index":669,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":609,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":601,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpasswordvalidator",{"_index":595,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["confirmpasswordvalidator(group",{"_index":722,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console.error('an",{"_index":540,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.error('error",{"_index":452,"title":{},"body":{"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["console.error('invalid",{"_index":478,"title":{},"body":{"components/ProductListComponent.html":{}}}],["console.log('recover",{"_index":567,"title":{},"body":{"components/RecoverComponent.html":{}}}],["console.warn('localstorage",{"_index":641,"title":{},"body":{"injectables/StorageService.html":{}}}],["const",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{}}}],["constructor",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":291,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfileComponent.html":{}}}],["constructor(fb",{"_index":392,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(formbuilder",{"_index":228,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["constructor(http",{"_index":496,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"components/HeaderComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["constructor(productservice",{"_index":181,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["constructor(storageservice",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{}}}],["contact",{"_index":370,"title":{},"body":{"components/HomeComponent.html":{}}}],["containing",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{}}}],["control",{"_index":411,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["control.markastouched",{"_index":410,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["copy",{"_index":278,"title":{},"body":{"components/FooterComponent.html":{}}}],["coverage",{"_index":661,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covered",{"_index":343,"title":{},"body":{"components/HomeComponent.html":{}}}],["create",{"_index":345,"title":{},"body":{"components/HomeComponent.html":{}}}],["curated",{"_index":353,"title":{},"body":{"components/HomeComponent.html":{}}}],["current",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{}}}],["currently",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuser",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["currentuser.birthdate",{"_index":549,"title":{},"body":{"components/ProfileComponent.html":{}}}],["currentuser.email",{"_index":548,"title":{},"body":{"components/ProfileComponent.html":{}}}],["currentuser.username",{"_index":547,"title":{},"body":{"components/ProfileComponent.html":{}}}],["customer",{"_index":358,"title":{},"body":{"components/HomeComponent.html":{}}}],["data",{"_index":501,"title":{},"body":{"injectables/ProductService.html":{}}}],["dataurl",{"_index":491,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["date",{"_index":265,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["dedicated",{"_index":320,"title":{},"body":{"components/HomeComponent.html":{}}}],["default",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/HeaderComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/RecoverComponent.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":693,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":78,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{}}}],["destination",{"_index":315,"title":{},"body":{"components/HomeComponent.html":{}}}],["detail",{"_index":423,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["detail'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["detail.component.html",{"_index":424,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["detail.component.scss",{"_index":425,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["detail.component.ts",{"_index":422,"title":{},"body":{"components/ProductDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:16",{"_index":437,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["detail.component.ts:18",{"_index":440,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["detail.component.ts:19",{"_index":439,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":442,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["detail.component.ts:22",{"_index":443,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":431,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["detail.component.ts:27",{"_index":434,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["detail.component.ts:34",{"_index":433,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["detail.component.ts:47",{"_index":432,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["detail/product",{"_index":421,"title":{},"body":{"components/ProductDetailComponent.html":{},"coverage.html":{}}}],["details",{"_index":436,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["dev",{"_index":737,"title":{},"body":{"index.html":{}}}],["development",{"_index":733,"title":{},"body":{"index.html":{}}}],["dice",{"_index":280,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["directive",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["directives",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":749,"title":{},"body":{"index.html":{}}}],["directory",{"_index":753,"title":{},"body":{"index.html":{}}}],["discount",{"_index":210,"title":{},"body":{"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{}}}],["discover",{"_index":349,"title":{},"body":{"components/HomeComponent.html":{}}}],["dist",{"_index":752,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["don't",{"_index":416,"title":{},"body":{"components/LoginComponent.html":{}}}],["don\\'t",{"_index":419,"title":{},"body":{"components/LoginComponent.html":{}}}],["dynamic",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":640,"title":{},"body":{"injectables/StorageService.html":{}}}],["e2e",{"_index":761,"title":{},"body":{"index.html":{}}}],["edit",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["editform",{"_index":225,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["editform.get('birthdate')?.errors?.['minage'].actualage",{"_index":269,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["editform.get('birthdate')?.errors?.['minage'].requiredage",{"_index":266,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["editform.get(\\'birthdate\\')?.errors?.[\\'minage\\'].actualage",{"_index":273,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["editform.get(\\'birthdate\\')?.errors?.[\\'minage\\'].requiredage",{"_index":272,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["editprofilecomponent",{"_index":48,"title":{"components/EditProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["el",{"_index":393,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["element",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["elementref",{"_index":394,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["email",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{}}}],["embark",{"_index":367,"title":{},"body":{"components/HomeComponent.html":{}}}],["emits",{"_index":518,"title":{},"body":{"injectables/ProductService.html":{}}}],["end",{"_index":760,"title":{},"body":{"index.html":{}}}],["entertaining",{"_index":341,"title":{},"body":{"components/HomeComponent.html":{}}}],["epic",{"_index":368,"title":{},"body":{"components/HomeComponent.html":{}}}],["error",{"_index":451,"title":{},"body":{"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/RecoverComponent.html":{}}}],["errors",{"_index":515,"title":{},"body":{"injectables/ProductService.html":{},"components/RegisterComponent.html":{}}}],["eventcoalescing",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["excitement",{"_index":312,"title":{},"body":{"components/HomeComponent.html":{}}}],["execute",{"_index":757,"title":{},"body":{"index.html":{}}}],["experience",{"_index":323,"title":{},"body":{"components/HomeComponent.html":{}}}],["explore",{"_index":306,"title":{},"body":{"components/HomeComponent.html":{}}}],["export",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["express",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["fb",{"_index":396,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["fetch",{"_index":505,"title":{},"body":{"injectables/ProductService.html":{}}}],["fetched",{"_index":511,"title":{},"body":{"injectables/ProductService.html":{}}}],["fetching",{"_index":453,"title":{},"body":{"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":744,"title":{},"body":{"index.html":{}}}],["filled",{"_index":311,"title":{},"body":{"components/HomeComponent.html":{}}}],["first",{"_index":766,"title":{},"body":{"index.html":{}}}],["fns",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["footer",{"_index":275,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["footer.component.html",{"_index":276,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":277,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":385,"title":{},"body":{"components/LayoutComponent.html":{}}}],["footercomponent",{"_index":51,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["for(cat",{"_index":200,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["for(prod",{"_index":483,"title":{},"body":{"components/ProductListComponent.html":{}}}],["forgot",{"_index":417,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":568,"title":{},"body":{"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["format",{"_index":263,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["formbuilder",{"_index":229,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":234,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["found",{"_index":506,"title":{},"body":{"injectables/ProductService.html":{}}}],["foundproduct",{"_index":537,"title":{},"body":{"injectables/ProductService.html":{}}}],["fun",{"_index":313,"title":{},"body":{"components/HomeComponent.html":{}}}],["function",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":716,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":770,"title":{},"body":{"index.html":{}}}],["gamer",{"_index":333,"title":{},"body":{"components/HomeComponent.html":{}}}],["gamers",{"_index":319,"title":{},"body":{"components/HomeComponent.html":{}}}],["games",{"_index":207,"title":{},"body":{"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/HomeComponent.html":{},"interfaces/Product.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{}}}],["gaming",{"_index":317,"title":{},"body":{"components/HomeComponent.html":{}}}],["generate",{"_index":747,"title":{},"body":{"index.html":{}}}],["generated",{"_index":729,"title":{},"body":{"index.html":{}}}],["get(this.dataurl",{"_index":526,"title":{},"body":{"injectables/ProductService.html":{}}}],["getcategories",{"_index":492,"title":{},"body":{"injectables/ProductService.html":{}}}],["getcurrentuser",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["getitem",{"_index":619,"title":{},"body":{"interfaces/Storage.html":{},"injectables/StorageService.html":{}}}],["getitem(key",{"_index":214,"title":{},"body":{"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{}}}],["getproductbyid",{"_index":493,"title":{},"body":{"injectables/ProductService.html":{}}}],["getproductbyid(productid",{"_index":503,"title":{},"body":{"injectables/ProductService.html":{}}}],["getproductsbycategory",{"_index":494,"title":{},"body":{"injectables/ProductService.html":{}}}],["getproductsbycategory(categoryid",{"_index":507,"title":{},"body":{"injectables/ProductService.html":{}}}],["getting",{"_index":725,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":653,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid(id",{"_index":655,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["go",{"_index":362,"title":{},"body":{"components/HomeComponent.html":{},"components/RecoverComponent.html":{},"index.html":{}}}],["goback",{"_index":429,"title":{},"body":{"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["gotogamedetail",{"_index":465,"title":{},"body":{"components/ProductListComponent.html":{}}}],["gotogamedetail(productid",{"_index":469,"title":{},"body":{"components/ProductListComponent.html":{}}}],["gotogames",{"_index":179,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["gotogames(categoryid",{"_index":184,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["group",{"_index":723,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handleerror",{"_index":495,"title":{},"body":{"injectables/ProductService.html":{}}}],["handleerror(error",{"_index":512,"title":{},"body":{"injectables/ProductService.html":{}}}],["handles",{"_index":514,"title":{},"body":{"injectables/ProductService.html":{}}}],["handling",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["hardcore",{"_index":332,"title":{},"body":{"components/HomeComponent.html":{}}}],["header",{"_index":285,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["header.component.html",{"_index":286,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":287,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":384,"title":{},"body":{"components/LayoutComponent.html":{}}}],["headercomponent",{"_index":53,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["heaven",{"_index":281,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["help",{"_index":771,"title":{},"body":{"index.html":{}}}],["home",{"_index":301,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["home.component.html",{"_index":304,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":305,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":55,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["html",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["http",{"_index":499,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":739,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/data/products.json",{"_index":519,"title":{},"body":{"injectables/ProductService.html":{}}}],["http://localhost:4200/data/users.json",{"_index":658,"title":{},"body":{"injectables/UserService.html":{}}}],["httpclient",{"_index":497,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["id",{"_index":199,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":208,"title":{},"body":{"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{}}}],["implements",{"_index":173,"title":{},"body":{"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["import",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["infodiceheaven.com",{"_index":371,"title":{},"body":{"components/HomeComponent.html":{}}}],["information",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject",{"_index":192,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["inject(activatedroute",{"_index":441,"title":{},"body":{"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["inject(location",{"_index":435,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["inject(router",{"_index":190,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["injectable",{"_index":74,"title":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":297,"title":{},"body":{"components/HeaderComponent.html":{}}}],["inputs",{"_index":289,"title":{},"body":{"components/HeaderComponent.html":{}}}],["instanceof",{"_index":412,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["interests",{"_index":329,"title":{},"body":{"components/HomeComponent.html":{}}}],["interface",{"_index":204,"title":{"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{}},"body":{"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":205,"title":{},"body":{"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{},"overview.html":{}}}],["invalid",{"_index":262,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["isadmin",{"_index":213,"title":{},"body":{"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{}}}],["isloggedin",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["item",{"_index":647,"title":{},"body":{"injectables/StorageService.html":{}}}],["journe",{"_index":369,"title":{},"body":{"components/HomeComponent.html":{}}}],["json.parse(item",{"_index":649,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(value",{"_index":646,"title":{},"body":{"injectables/StorageService.html":{}}}],["karma",{"_index":759,"title":{},"body":{"index.html":{}}}],["key",{"_index":623,"title":{},"body":{"interfaces/Storage.html":{},"injectables/StorageService.html":{}}}],["knowledgeable",{"_index":355,"title":{},"body":{"components/HomeComponent.html":{}}}],["latest",{"_index":335,"title":{},"body":{"components/HomeComponent.html":{}}}],["layout",{"_index":380,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["layout.component.html",{"_index":382,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout.component.scss",{"_index":383,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layoutcomponent",{"_index":17,"title":{"components/LayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["legend",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["let's",{"_index":366,"title":{},"body":{"components/HomeComponent.html":{}}}],["let\\'s",{"_index":378,"title":{},"body":{"components/HomeComponent.html":{}}}],["list",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{},"components/ProductListComponent.html":{}}}],["list'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["list.component.html",{"_index":463,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.scss",{"_index":464,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts",{"_index":462,"title":{},"body":{"components/ProductListComponent.html":{},"coverage.html":{}}}],["list.component.ts:14",{"_index":474,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:15",{"_index":473,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:17",{"_index":475,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:18",{"_index":467,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:22",{"_index":472,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:33",{"_index":471,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:46",{"_index":470,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list.component.ts:52",{"_index":468,"title":{},"body":{"components/ProductListComponent.html":{}}}],["list/product",{"_index":461,"title":{},"body":{"components/ProductListComponent.html":{},"coverage.html":{}}}],["loadproduct",{"_index":430,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["loadproducts",{"_index":466,"title":{},"body":{"components/ProductListComponent.html":{}}}],["localstorage",{"_index":638,"title":{},"body":{"injectables/StorageService.html":{}}}],["localstorage.removeitem(testkey",{"_index":636,"title":{},"body":{"injectables/StorageService.html":{}}}],["localstorage.setitem(testkey",{"_index":634,"title":{},"body":{"injectables/StorageService.html":{}}}],["location",{"_index":426,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["logged",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["login'},{'name",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["login.component.html",{"_index":387,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":388,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":58,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":389,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginuser(email",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":288,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logoutuser",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":261,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["looking",{"_index":334,"title":{},"body":{"components/HomeComponent.html":{}}}],["love",{"_index":352,"title":{},"body":{"components/HomeComponent.html":{}}}],["make",{"_index":361,"title":{},"body":{"components/HomeComponent.html":{}}}],["map",{"_index":521,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["map((response",{"_index":528,"title":{},"body":{"injectables/ProductService.html":{}}}],["markformgrouptouched",{"_index":390,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["markformgrouptouched(formgroup",{"_index":397,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["match",{"_index":611,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matching",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["memory",{"_index":644,"title":{},"body":{"injectables/StorageService.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":553,"title":{},"body":{"components/RecoverComponent.html":{}}}],["messagetype",{"_index":554,"title":{},"body":{"components/RecoverComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["methods",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}}}],["minage",{"_index":720,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":715,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":344,"title":{},"body":{"components/HomeComponent.html":{}}}],["models/models",{"_index":194,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}}}],["modules",{"_index":777,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":772,"title":{},"body":{"index.html":{}}}],["name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":738,"title":{},"body":{"index.html":{}}}],["navigating",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["need",{"_index":765,"title":{},"body":{"index.html":{}}}],["needs",{"_index":363,"title":{},"body":{"components/HomeComponent.html":{}}}],["new",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"index.html":{}}}],["newuser",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["ng",{"_index":735,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":180,"title":{},"body":{"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["null",{"_index":215,"title":{},"body":{"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":185,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":106,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["object.values(formgroup.controls).foreach((control",{"_index":409,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["objects",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["observable",{"_index":502,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["occurred",{"_index":541,"title":{},"body":{"injectables/ProductService.html":{}}}],["offer",{"_index":325,"title":{},"body":{"components/HomeComponent.html":{}}}],["old",{"_index":268,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["oninit",{"_index":174,"title":{},"body":{"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["onsubmit",{"_index":226,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["operations",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["optional",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["otherwise",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["out",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["overview",{"_index":774,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p.id",{"_index":539,"title":{},"body":{"injectables/ProductService.html":{}}}],["package",{"_index":692,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":776,"title":{},"body":{"index.html":{}}}],["pagetitle",{"_index":290,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProductDetailComponent.html":{}}}],["param",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["parameters",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params['id",{"_index":447,"title":{},"body":{"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["passionate",{"_index":318,"title":{},"body":{"components/HomeComponent.html":{}}}],["password",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{}}}],["passwords",{"_index":610,"title":{},"body":{"components/RegisterComponent.html":{}}}],["phone",{"_index":372,"title":{},"body":{"components/HomeComponent.html":{}}}],["pipe",{"_index":527,"title":{},"body":{"injectables/ProductService.html":{}}}],["platform",{"_index":762,"title":{},"body":{"index.html":{}}}],["play",{"_index":350,"title":{},"body":{"components/HomeComponent.html":{}}}],["player",{"_index":339,"title":{},"body":{"components/HomeComponent.html":{}}}],["populateform",{"_index":227,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["possible",{"_index":324,"title":{},"body":{"components/HomeComponent.html":{}}}],["price",{"_index":209,"title":{},"body":{"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{}}}],["private",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"injectables/ProductService.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}}}],["prod.description",{"_index":486,"title":{},"body":{"components/ProductListComponent.html":{}}}],["prod.discount",{"_index":488,"title":{},"body":{"components/ProductListComponent.html":{}}}],["prod.id",{"_index":484,"title":{},"body":{"components/ProductListComponent.html":{}}}],["prod.name",{"_index":485,"title":{},"body":{"components/ProductListComponent.html":{}}}],["prod.price",{"_index":487,"title":{},"body":{"components/ProductListComponent.html":{}}}],["product",{"_index":61,"title":{"interfaces/Product.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["product.description",{"_index":456,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["product.discount",{"_index":459,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["product.name",{"_index":455,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["product.price",{"_index":457,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["productdetailcomponent",{"_index":60,"title":{"components/ProductDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["productid",{"_index":427,"title":{},"body":{"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{}}}],["productlistcomponent",{"_index":63,"title":{"components/ProductListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["products",{"_index":212,"title":{},"body":{"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/HeaderComponent.html":{},"interfaces/Product.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{}}}],["productservice",{"_index":182,"title":{"injectables/ProductService.html":{}},"body":{"components/CategoriesComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["profile",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"components/EditProfileComponent.html":{},"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["profile.component.html",{"_index":223,"title":{},"body":{"components/EditProfileComponent.html":{},"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":224,"title":{},"body":{"components/EditProfileComponent.html":{},"components/ProfileComponent.html":{}}}],["profile.component.ts",{"_index":220,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:21",{"_index":235,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:22",{"_index":230,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:36",{"_index":231,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:41",{"_index":233,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:49",{"_index":232,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile/edit",{"_index":219,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["profilecomponent",{"_index":65,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["project",{"_index":728,"title":{},"body":{"index.html":{}}}],["properties",{"_index":23,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provideclienthydration",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}}}],["providehttpclient",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providing",{"_index":321,"title":{},"body":{"components/HomeComponent.html":{}}}],["queryparams",{"_index":198,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ProductListComponent.html":{}}}],["range",{"_index":327,"title":{},"body":{"components/HomeComponent.html":{}}}],["reactiveformsmodule",{"_index":222,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["ready",{"_index":309,"title":{},"body":{"components/HomeComponent.html":{}}}],["received",{"_index":516,"title":{},"body":{"injectables/ProductService.html":{}}}],["recover",{"_index":418,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{}}}],["recover'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["recover.component.html",{"_index":551,"title":{},"body":{"components/RecoverComponent.html":{}}}],["recover.component.scss",{"_index":552,"title":{},"body":{"components/RecoverComponent.html":{}}}],["recovercomponent",{"_index":66,"title":{"components/RecoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["recoverform",{"_index":555,"title":{},"body":{"components/RecoverComponent.html":{}}}],["recovery",{"_index":572,"title":{},"body":{"components/RecoverComponent.html":{}}}],["reference",{"_index":775,"title":{},"body":{"index.html":{}}}],["register",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":586,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":587,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":68,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["registerform",{"_index":588,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('birthdate')?.errors?.['minage'].actualage",{"_index":613,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('birthdate')?.errors?.['minage'].requiredage",{"_index":612,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'birthdate\\')?.errors?.[\\'minage\\'].actualage",{"_index":618,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'birthdate\\')?.errors?.[\\'minage\\'].requiredage",{"_index":617,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registers",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruser",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruser(email",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["related",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["reload",{"_index":742,"title":{},"body":{"index.html":{}}}],["removeitem",{"_index":620,"title":{},"body":{"interfaces/Storage.html":{},"injectables/StorageService.html":{}}}],["removeitem(key",{"_index":217,"title":{},"body":{"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{}}}],["removing",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["required",{"_index":258,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["reserved",{"_index":283,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":615,"title":{},"body":{"components/RegisterComponent.html":{}}}],["resetform",{"_index":589,"title":{},"body":{"components/RegisterComponent.html":{}}}],["response.data.categories",{"_index":529,"title":{},"body":{"injectables/ProductService.html":{}}}],["response.data.categories.find",{"_index":532,"title":{},"body":{"injectables/ProductService.html":{}}}],["response.data.categories.foreach((category",{"_index":536,"title":{},"body":{"injectables/ProductService.html":{}}}],["responsible",{"_index":490,"title":{},"body":{"injectables/ProductService.html":{}}}],["results",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["return",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/ProductService.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":282,"title":{},"body":{"components/FooterComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/StorageService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["route",{"_index":428,"title":{},"body":{"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["router",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["routerlink",{"_index":176,"title":{},"body":{"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["routeroutlet",{"_index":381,"title":{},"body":{"components/LayoutComponent.html":{}}}],["run",{"_index":734,"title":{},"body":{"index.html":{}}}],["running",{"_index":754,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":524,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["satisfaction",{"_index":359,"title":{},"body":{"components/HomeComponent.html":{}}}],["save",{"_index":270,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["scaffolding",{"_index":746,"title":{},"body":{"index.html":{}}}],["search",{"_index":340,"title":{},"body":{"components/HomeComponent.html":{}}}],["seconds",{"_index":581,"title":{},"body":{"components/RecoverComponent.html":{}}}],["selection",{"_index":354,"title":{},"body":{"components/HomeComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["sent",{"_index":573,"title":{},"body":{"components/RecoverComponent.html":{}}}],["serve",{"_index":736,"title":{},"body":{"index.html":{}}}],["server",{"_index":700,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["serverconfig",{"_index":671,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["services/auth/auth.service",{"_index":236,"title":{},"body":{"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["services/product/product.service",{"_index":193,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["setitem",{"_index":621,"title":{},"body":{"interfaces/Storage.html":{},"injectables/StorageService.html":{}}}],["setitem(key",{"_index":216,"title":{},"body":{"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{}}}],["settimeout",{"_index":582,"title":{},"body":{"components/RecoverComponent.html":{}}}],["share",{"_index":351,"title":{},"body":{"components/HomeComponent.html":{}}}],["showmessage",{"_index":556,"title":{},"body":{"components/RecoverComponent.html":{}}}],["showmessage(message",{"_index":559,"title":{},"body":{"components/RecoverComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["specific",{"_index":510,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/.../age.validator.ts",{"_index":717,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.config.server.ts",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../password.validator.ts",{"_index":718,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":672,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/categories/categories.component.ts",{"_index":172,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["src/app/components/categories/categories.component.ts:14",{"_index":191,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/components/categories/categories.component.ts:16",{"_index":183,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/components/categories/categories.component.ts:20",{"_index":188,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/components/categories/categories.component.ts:26",{"_index":186,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/components/edit",{"_index":218,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts",{"_index":303,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts",{"_index":386,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":395,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":399,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:37",{"_index":400,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:47",{"_index":398,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/product",{"_index":420,"title":{},"body":{"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"coverage.html":{}}}],["src/app/components/profile/profile.component.ts",{"_index":543,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/components/profile/profile.component.ts:13",{"_index":544,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:17",{"_index":545,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/recover/recover.component.ts",{"_index":550,"title":{},"body":{"components/RecoverComponent.html":{},"coverage.html":{}}}],["src/app/components/recover/recover.component.ts:19",{"_index":564,"title":{},"body":{"components/RecoverComponent.html":{}}}],["src/app/components/recover/recover.component.ts:20",{"_index":563,"title":{},"body":{"components/RecoverComponent.html":{}}}],["src/app/components/recover/recover.component.ts:21",{"_index":557,"title":{},"body":{"components/RecoverComponent.html":{}}}],["src/app/components/recover/recover.component.ts:29",{"_index":558,"title":{},"body":{"components/RecoverComponent.html":{}}}],["src/app/components/recover/recover.component.ts:35",{"_index":562,"title":{},"body":{"components/RecoverComponent.html":{}}}],["src/app/components/recover/recover.component.ts:47",{"_index":561,"title":{},"body":{"components/RecoverComponent.html":{}}}],["src/app/components/register/register.component.ts",{"_index":585,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts:22",{"_index":590,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:33",{"_index":592,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:64",{"_index":594,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:75",{"_index":593,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:85",{"_index":591,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/shared/footer/footer.component.ts",{"_index":274,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/header/header.component.ts",{"_index":284,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/header/header.component.ts:14",{"_index":292,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/shared/header/header.component.ts:18",{"_index":295,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/shared/header/header.component.ts:22",{"_index":294,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/shared/header/header.component.ts:26",{"_index":296,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/shared/layout/layout.component.ts",{"_index":379,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["src/app/models/models.ts",{"_index":206,"title":{},"body":{"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/models/models.ts:34",{"_index":622,"title":{},"body":{"interfaces/Storage.html":{}}}],["src/app/models/models.ts:35",{"_index":625,"title":{},"body":{"interfaces/Storage.html":{}}}],["src/app/models/models.ts:36",{"_index":624,"title":{},"body":{"interfaces/Storage.html":{}}}],["src/app/services/auth/auth.service.ts",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth/auth.service.ts:108",{"_index":107,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:13",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:25",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:46",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:63",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:74",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:84",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:98",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/product/product.service.ts",{"_index":489,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/app/services/product/product.service.ts:14",{"_index":498,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/services/product/product.service.ts:23",{"_index":500,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/services/product/product.service.ts:38",{"_index":508,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/services/product/product.service.ts:58",{"_index":504,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/services/product/product.service.ts:82",{"_index":513,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/services/storage/storage.service.ts",{"_index":626,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/services/storage/storage.service.ts:26",{"_index":630,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:30",{"_index":628,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:35",{"_index":629,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:8",{"_index":627,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/user/user.service.ts",{"_index":652,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user/user.service.ts:10",{"_index":654,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:14",{"_index":657,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:18",{"_index":656,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/validators/age.validator.ts",{"_index":685,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/validators/password.validator.ts",{"_index":687,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/main.server.ts",{"_index":688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["staff",{"_index":356,"title":{},"body":{"components/HomeComponent.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["started",{"_index":726,"title":{"index.html":{}},"body":{}}],["statements",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["storage",{"_index":104,"title":{"interfaces/Storage.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"interfaces/Product.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["storage/storage.service",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["storageservice",{"_index":95,"title":{"injectables/StorageService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["store",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["storeapp",{"_index":727,"title":{},"body":{"index.html":{}}}],["stored",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["string",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/HeaderComponent.html":{},"interfaces/Product.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductService.html":{},"components/RecoverComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["strive",{"_index":360,"title":{},"body":{"components/HomeComponent.html":{}}}],["styleurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["submitform",{"_index":391,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["submitted",{"_index":569,"title":{},"body":{"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["success",{"_index":560,"title":{},"body":{"components/RecoverComponent.html":{}}}],["successful",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":574,"title":{},"body":{"components/RecoverComponent.html":{}}}],["table",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["test",{"_index":635,"title":{},"body":{"injectables/StorageService.html":{},"index.html":{}}}],["testing",{"_index":768,"title":{},"body":{"index.html":{}}}],["testkey",{"_index":632,"title":{},"body":{"injectables/StorageService.html":{}}}],["tests",{"_index":756,"title":{},"body":{"index.html":{}}}],["thank",{"_index":364,"title":{},"body":{"components/HomeComponent.html":{}}}],["things",{"_index":316,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authservice.getcurrentuser",{"_index":248,"title":{},"body":{"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ProfileComponent.html":{}}}],["this.authservice.isloggedin",{"_index":298,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.loginuser(email",{"_index":406,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logoutuser",{"_index":299,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.registeruser(email",{"_index":605,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.updateprofile(updatedprofile",{"_index":256,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.categories",{"_index":196,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.categoryid",{"_index":476,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.currentuser",{"_index":546,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.editform",{"_index":242,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.editform.patchvalue",{"_index":250,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.editform.valid",{"_index":254,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.editform.value",{"_index":255,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.fb.group",{"_index":402,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["this.formbuilder.group",{"_index":243,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.getcurrentuser",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getusers",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http",{"_index":525,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.get(`${this.dataurl",{"_index":659,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.dataurl}/${id",{"_index":660,"title":{},"body":{"injectables/UserService.html":{}}}],["this.loadproduct",{"_index":448,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["this.loadproducts",{"_index":477,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.location.back",{"_index":454,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["this.loginform",{"_index":401,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":404,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":405,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginuser(email",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.markformgrouptouched(control",{"_index":413,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.markformgrouptouched(this.loginform",{"_index":408,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.markformgrouptouched(this.registerform",{"_index":607,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.message",{"_index":577,"title":{},"body":{"components/RecoverComponent.html":{}}}],["this.messagetype",{"_index":578,"title":{},"body":{"components/RecoverComponent.html":{}}}],["this.populateform",{"_index":249,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.product",{"_index":450,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["this.productid",{"_index":446,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["this.products",{"_index":480,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.productservice.getcategories().subscribe((categories",{"_index":195,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.productservice.getproductbyid(this.productid).subscribe",{"_index":449,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["this.productservice.getproductsbycategory(this.categoryid).subscribe",{"_index":479,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.recoverform",{"_index":565,"title":{},"body":{"components/RecoverComponent.html":{}}}],["this.recoverform.markallastouched",{"_index":576,"title":{},"body":{"components/RecoverComponent.html":{}}}],["this.recoverform.reset",{"_index":575,"title":{},"body":{"components/RecoverComponent.html":{}}}],["this.recoverform.valid",{"_index":566,"title":{},"body":{"components/RecoverComponent.html":{}}}],["this.recoverform.value.email",{"_index":570,"title":{},"body":{"components/RecoverComponent.html":{}}}],["this.registerform",{"_index":597,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.reset",{"_index":608,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.valid",{"_index":603,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value",{"_index":604,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":445,"title":{},"body":{"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["this.router.navigate",{"_index":482,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.router.navigate(['/home",{"_index":407,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/login",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['/product",{"_index":481,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.router.navigate(['/products",{"_index":197,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.router.navigate(['/profile",{"_index":257,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.showmessage('password",{"_index":571,"title":{},"body":{"components/RecoverComponent.html":{}}}],["this.storage",{"_index":637,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.storage?.getitem(key",{"_index":648,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.storage?.removeitem(key",{"_index":650,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.storage?.setitem(key",{"_index":645,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.storageservice.getitem('currentuser",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storageservice.getitem('users",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storageservice.removeitem('currentuser",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storageservice.setitem('currentuser",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storageservice.setitem('users",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user",{"_index":247,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.user.birthdate",{"_index":253,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.user.email",{"_index":252,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.user.username",{"_index":251,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["thrilling",{"_index":308,"title":{},"body":{"components/HomeComponent.html":{}}}],["throwerror",{"_index":523,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["throwerror(error",{"_index":542,"title":{},"body":{"injectables/ProductService.html":{}}}],["title",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["titles",{"_index":337,"title":{},"body":{"components/HomeComponent.html":{}}}],["together",{"_index":348,"title":{},"body":{"components/HomeComponent.html":{}}}],["track",{"_index":201,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ProductListComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":631,"title":{},"body":{"injectables/StorageService.html":{}}}],["tslib",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["u",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["u.email",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["u.password",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["ultimate",{"_index":314,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":438,"title":{},"body":{"components/ProductDetailComponent.html":{},"injectables/ProductService.html":{}}}],["unit",{"_index":755,"title":{},"body":{"index.html":{}}}],["updated",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatedprofile",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"components/EditProfileComponent.html":{}}}],["updateduser",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateprofile",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateprofile(updatedprofile",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["updates",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["usd",{"_index":458,"title":{},"body":{"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["use",{"_index":748,"title":{},"body":{"index.html":{}}}],["user",{"_index":103,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"interfaces/Product.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user's",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"interfaces/Product.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"interfaces/User.html":{}}}],["users",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["users.find",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["users.push(newuser",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["userservice",{"_index":651,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["using",{"_index":643,"title":{},"body":{"injectables/StorageService.html":{}}}],["validation",{"_index":606,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validationerrors",{"_index":724,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":602,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validatorfn",{"_index":721,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":237,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.email",{"_index":245,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":598,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(6",{"_index":403,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.pattern(/^(?=.*\\d)(?=.*[a",{"_index":599,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":244,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["validators/age.validator",{"_index":241,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators/password.validator",{"_index":596,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/HeaderComponent.html":{},"interfaces/Product.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"injectables/ProductService.html":{},"components/RecoverComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/EditProfileComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{}}}],["variable",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":781,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":732,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":758,"title":{},"body":{"index.html":{}}}],["void",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/CategoryComponentData.html":{},"components/EditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Storage.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{}}}],["we've",{"_index":342,"title":{},"body":{"components/HomeComponent.html":{}}}],["we\\'ve",{"_index":377,"title":{},"body":{"components/HomeComponent.html":{}}}],["website",{"_index":300,"title":{},"body":{"components/HeaderComponent.html":{}}}],["welcome",{"_index":293,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["whether",{"_index":330,"title":{},"body":{"components/HomeComponent.html":{}}}],["wide",{"_index":326,"title":{},"body":{"components/HomeComponent.html":{}}}],["world",{"_index":307,"title":{},"body":{"components/HomeComponent.html":{}}}],["years",{"_index":267,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["you're",{"_index":331,"title":{},"body":{"components/HomeComponent.html":{}}}],["you\\'re",{"_index":376,"title":{},"body":{"components/HomeComponent.html":{}}}],["z]).{6,18",{"_index":600,"title":{},"body":{"components/RegisterComponent.html":{}}}],["zone.js",{"_index":713,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                LayoutComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'store-app'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { LayoutComponent } from './components/shared/layout/layout.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [LayoutComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'store-app';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProductDetailComponent', 'selector': 'app-product-detail'},{'name': 'ProductListComponent', 'selector': 'app-product-list'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service handling authentication-related operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                    Private\n                                getUsers\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                loginUser\n                            \n                            \n                                logoutUser\n                            \n                            \n                                registerUser\n                            \n                            \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Retrieves the current user from storage.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                The current user object from storage.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:108\n                        \n                    \n\n\n            \n                \n                        Retrieves the list of all users from storage.\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                An array containing all user objects stored in 'users'.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:98\n                        \n                    \n\n\n            \n                \n                        Checks if a user is currently logged in.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if a user is logged in, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Logs in a user with email and password.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The email of the user.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The password of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Returns true if login successful, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutUser\n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Logs out the current user by removing 'currentUser' from storage and navigating to '/login'.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(email: string, password: string, username: string, birthDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Registers a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The email of the user.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The password of the user.\n\n                                            \n                                        \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The username of the user.\n\n                                            \n                                        \n                                        \n                                                birthDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The birthdate of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \nupdateProfile(updatedProfile: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Updates the current user's profile with new information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedProfile\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The updated profile information to be applied.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from '../storage/storage.service';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Service handling authentication-related operations.\n */\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private storageService: StorageService, private router: Router) {}\n\n  /**\n   * @description\n   * Registers a new user.\n   * @param email The email of the user.\n   * @param password The password of the user.\n   * @param username The username of the user.\n   * @param birthDate The birthdate of the user.\n   */\n\n  registerUser(\n    email: string,\n    password: string,\n    username: string,\n    birthDate: string\n  ): void {\n    const users = this.getUsers();\n    const newUser = { email, password, username, birthDate };\n    users.push(newUser);\n    this.storageService.setItem('users', users);\n    this.loginUser(email, password);\n  }\n\n  /**\n   * @description\n   * Logs in a user with email and password.\n   * @param email The email of the user.\n   * @param password The password of the user.\n   * @returns Returns true if login successful, otherwise false.\n   */\n\n  loginUser(email: string, password: string): boolean {\n    const users = this.getUsers();\n    const user = users.find(\n      (u) => u.email === email && u.password === password\n    );\n    if (user) {\n      this.storageService.setItem('currentUser', user);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @description\n   * Logs out the current user by removing 'currentUser' from storage and navigating to '/login'.\n   */\n\n  logoutUser(): void {\n    this.storageService.removeItem('currentUser');\n    this.router.navigate(['/login']);\n  }\n\n  /**\n   * @description\n   * Retrieves the current user from storage.\n   * @returns The current user object from storage.\n   */\n\n  getCurrentUser(): any {\n    return this.storageService.getItem('currentUser');\n  }\n\n  /**\n   * @description\n   * Updates the current user's profile with new information.\n   * @param updatedProfile The updated profile information to be applied.\n   */\n\n  updateProfile(updatedProfile: any): void {\n    const currentUser = this.getCurrentUser();\n    if (currentUser) {\n      const updatedUser = { ...currentUser, ...updatedProfile };\n      this.storageService.setItem('currentUser', updatedUser);\n    }\n  }\n\n  /**\n   * @description\n   * Checks if a user is currently logged in.\n   * @returns True if a user is logged in, false otherwise.\n   */\n\n  isLoggedIn(): boolean {\n    return !!this.storageService.getItem('currentUser');\n  }\n\n  /**\n   * @description\n   * Retrieves the list of all users from storage.\n   * @returns An array containing all user objects stored in 'users'.\n   */\n\n  private getUsers(): any[] {\n    return this.storageService.getItem('users') || [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/categories/categories.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n\n            \n                styleUrl\n                ./categories.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToGames\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ProductService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/categories/categories.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ProductService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToGames\n                        \n                    \n                \n            \n            \n                \ngoToGames(categoryId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categories/categories.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categories/categories.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categories/categories.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categories/categories.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\nimport { ProductService } from '../../services/product/product.service';\nimport { Category } from '../../models/models';\n\n@Component({\n  selector: 'app-categories',\n  standalone: true,\n  imports: [RouterLink],\n  templateUrl: './categories.component.html',\n  styleUrl: './categories.component.scss',\n})\nexport class CategoriesComponent implements OnInit {\n  router = inject(Router);\n\n  categories: Category[] = [];\n\n  constructor(private ProductService: ProductService) {}\n\n  ngOnInit(): void {\n    this.ProductService.getCategories().subscribe((categories) => {\n      this.categories = categories;\n    });\n  }\n\n  goToGames(categoryId: number) {\n    this.router.navigate(['/products'], {\n      queryParams: { id: categoryId },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    ⬅️\n    \n      \n        @for(cat of categories; track cat.id){\n        \n          \n             -->\n            \n              \n            \n            {{cat.name}}\n          \n        \n        }\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      ⬅️                  @for(cat of categories; track cat.id){                               -->                                                  {{cat.name}}                          }            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProductDetailComponent', 'selector': 'app-product-detail'},{'name': 'ProductListComponent', 'selector': 'app-product-list'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            games\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        games\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        games:         Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Product {\n  id: number;\n  name: string;\n  image: string;\n  description: string;\n  price: number;\n  discount: number;\n}\n\nexport interface Category {\n  id: number;\n  name: string;\n  image: string;\n  games: Product[];\n}\n\nexport interface CategoryComponentData {\n  categoryId?: number;\n  category?: Category;\n  products?: Product[];\n}\n\nexport interface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  birthDate: string;\n  isAdmin: boolean;\n}\n\nexport interface Storage {\n  getItem(key: string): string | null;\n  setItem(key: string, value: string): void;\n  removeItem(key: string): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CategoryComponentData.html":{"url":"interfaces/CategoryComponentData.html","title":"interface - CategoryComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CategoryComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            categoryId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            products\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        categoryId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:         Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Product {\n  id: number;\n  name: string;\n  image: string;\n  description: string;\n  price: number;\n  discount: number;\n}\n\nexport interface Category {\n  id: number;\n  name: string;\n  image: string;\n  games: Product[];\n}\n\nexport interface CategoryComponentData {\n  categoryId?: number;\n  category?: Category;\n  products?: Product[];\n}\n\nexport interface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  birthDate: string;\n  isAdmin: boolean;\n}\n\nexport interface Storage {\n  getItem(key: string): string | null;\n  setItem(key: string, value: string): void;\n  removeItem(key: string): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProfileComponent.html":{"url":"components/EditProfileComponent.html","title":"component - EditProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/edit-profile/edit-profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./edit-profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./edit-profile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editForm\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                populateForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/edit-profile/edit-profile.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/edit-profile/edit-profile.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/edit-profile/edit-profile.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        populateForm\n                        \n                    \n                \n            \n            \n                \npopulateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/edit-profile/edit-profile.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/edit-profile/edit-profile.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/edit-profile/edit-profile.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../../services/auth/auth.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ageValidator } from '../../validators/age.validator';\n\n@Component({\n  selector: 'app-edit-profile',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterLink],\n  templateUrl: './edit-profile.component.html',\n  styleUrl: './edit-profile.component.scss',\n})\nexport class EditProfileComponent implements OnInit {\n  editForm: FormGroup;\n  user: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.editForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      birthDate: ['', [Validators.required, ageValidator(14)]],\n    });\n  }\n\n  ngOnInit(): void {\n    this.user = this.authService.getCurrentUser() || {};\n    this.populateForm();\n  }\n\n  populateForm(): void {\n    this.editForm.patchValue({\n      username: this.user.username,\n      email: this.user.email,\n      birthDate: this.user.birthDate,\n    });\n  }\n\n  onSubmit(): void {\n    if (this.editForm.valid) {\n      const updatedProfile = this.editForm.value;\n      this.authService.updateProfile(updatedProfile);\n      this.router.navigate(['/profile']);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    ⬅️\n    \n      \n        Username:\n        \n        \n          Username is required.\n          Username must be at least 3 characters\n            long.\n          \n        \n      \n\n      \n        Email:\n        \n        \n          Email is required.\n          Invalid email format.\n        \n      \n\n      \n        BirthDate:\n        \n        \n          Birth Date is required.\n          \n            Must be at least {{ editForm.get('birthDate')?.errors?.['minAge'].requiredAge }} years old (you\n            are {{ editForm.get('birthDate')?.errors?.['minAge'].actualAge }}).\n          \n        \n      \n\n      Save Changes\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      ⬅️                  Username:                          Username is required.          Username must be at least 3 characters            long.                                      Email:                          Email is required.          Invalid email format.                            BirthDate:                          Birth Date is required.                      Must be at least {{ editForm.get(\\'birthDate\\')?.errors?.[\\'minAge\\'].requiredAge }} years old (you            are {{ editForm.get(\\'birthDate\\')?.errors?.[\\'minAge\\'].actualAge }}).                              Save Changes      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProductDetailComponent', 'selector': 'app-product-detail'},{'name': 'ProductListComponent', 'selector': 'app-product-list'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n  &copy; 2024 Dice Heaven. All rights reserved.\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  © 2024 Dice Heaven. All rights reserved.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProductDetailComponent', 'selector': 'app-product-detail'},{'name': 'ProductListComponent', 'selector': 'app-product-list'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageTitle\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/header/header.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pageTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Welcome, to Dice Heaven!'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/header/header.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/header/header.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/header/header.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/header/header.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { AuthService } from '../../../services/auth/auth.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [RouterLink, CommonModule],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss',\n})\nexport class HeaderComponent {\n  @Input() pageTitle: string = 'Welcome, to Dice Heaven!';\n\n  constructor(private authService: AuthService) {}\n\n  isLoggedIn(): boolean {\n    return this.authService.isLoggedIn();\n  }\n\n  getCurrentUser(): any {\n    return this.authService.getCurrentUser();\n  }\n\n  logout() {\n    this.authService.logoutUser();\n  }\n}\n\n    \n\n    \n        \n  {{pageTitle}}\n\n\n  \n    Your Website -->\n    \n      \n    \n    \n      \n        \n          Home\n        \n        \n          Products\n        \n        \n          Account\n        \n      \n      \n        \n          Login\n        \n        \n          Register\n        \n        \n          Logout\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{pageTitle}}      Your Website -->                                          Home                          Products                          Account                                      Login                          Register                          Logout                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProductDetailComponent', 'selector': 'app-product-detail'},{'name': 'ProductListComponent', 'selector': 'app-product-list'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [RouterLink],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent {}\n\n    \n\n    \n        \n  \n    \n      \n      Welcome to Dice Heaven!\n      Explore a world of thrilling games.\n      \n      Get ready for an adventure filled with excitement and fun.\n      Explore Games\n    \n  \n\n  \n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n  \n\n  \n    \n      \n        About Us\n        Welcome to Dice Heaven, your ultimate destination for all things gaming! We are passionate gamers dedicated\n          to providing you with the best gaming experience possible.\n        At Dice Heaven, we offer a wide range of games for all ages and interests. Whether you're a hardcore gamer\n          looking for the latest AAA titles or a casual player in search of fun and entertaining games, we've got you\n          covered.\n        Our mission is to create a community where gamers can come together to discover, play, and share their love\n          for gaming. With our curated selection of games, knowledgeable staff, and commitment to customer\n          satisfaction, we strive to make Dice Heaven your go-to destination for all your gaming needs. -->\n        Thank you for choosing Dice Heaven. Let's embark on an epic gaming journe\n      \n      \n        Contact Us\n        Email: infodiceheaven.com\n        Phone: +123 456 7890\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Welcome to Dice Heaven!      Explore a world of thrilling games.            Get ready for an adventure filled with excitement and fun.      Explore Games                                                                                                  About Us        Welcome to Dice Heaven, your ultimate destination for all things gaming! We are passionate gamers dedicated          to providing you with the best gaming experience possible.        At Dice Heaven, we offer a wide range of games for all ages and interests. Whether you\\'re a hardcore gamer          looking for the latest AAA titles or a casual player in search of fun and entertaining games, we\\'ve got you          covered.        Our mission is to create a community where gamers can come together to discover, play, and share their love          for gaming. With our curated selection of games, knowledgeable staff, and commitment to customer          satisfaction, we strive to make Dice Heaven your go-to destination for all your gaming needs. -->        Thank you for choosing Dice Heaven. Let\\'s embark on an epic gaming journe                    Contact Us        Email: infodiceheaven.com        Phone: +123 456 7890            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProductDetailComponent', 'selector': 'app-product-detail'},{'name': 'ProductListComponent', 'selector': 'app-product-list'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/layout/layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                HeaderComponent\n                                FooterComponent\n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./layout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./layout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { HeaderComponent } from '../header/header.component';\nimport { FooterComponent } from '../footer/footer.component';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-layout',\n  standalone: true,\n  imports: [HeaderComponent, FooterComponent, RouterOutlet],\n  templateUrl: './layout.component.html',\n  styleUrl: './layout.component.scss',\n})\nexport class LayoutComponent {}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProductDetailComponent', 'selector': 'app-product-detail'},{'name': 'ProductListComponent', 'selector': 'app-product-list'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                markFormGroupTouched\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, el: ElementRef, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        markFormGroupTouched\n                        \n                    \n                \n            \n            \n                \nmarkFormGroupTouched(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport {\n  ReactiveFormsModule,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../../services/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterLink],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss',\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  // users: any[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private el: ElementRef,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n\n  submitForm(): void {\n    if (this.loginForm.valid) {\n      const { email, password } = this.loginForm.value;\n      this.authService.loginUser(email, password);\n      this.router.navigate(['/home']);\n    } else {\n      this.markFormGroupTouched(this.loginForm);\n    }\n  }\n\n  markFormGroupTouched(formGroup: FormGroup): void {\n    Object.values(formGroup.controls).forEach((control) => {\n      control.markAsTouched();\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    🏠\n    \n      \n        \n          \n            Email address\n            \n            \n              Email is required.\n              Invalid email format.\n            \n          \n\n          \n            Password\n            \n            \n              Password is required.\n              Password must be at least 6 characters long.\n              \n            \n          \n\n          Login\n        \n        \n          Don't have an account? Register\n          Forgot your password? Recover\n              Account\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      🏠                                        Email address                                      Email is required.              Invalid email format.                                            Password                                      Password is required.              Password must be at least 6 characters long.                                              Login                          Don\\'t have an account? Register          Forgot your password? Recover              Account                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProductDetailComponent', 'selector': 'app-product-detail'},{'name': 'ProductListComponent', 'selector': 'app-product-list'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            discount\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        discount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Product {\n  id: number;\n  name: string;\n  image: string;\n  description: string;\n  price: number;\n  discount: number;\n}\n\nexport interface Category {\n  id: number;\n  name: string;\n  image: string;\n  games: Product[];\n}\n\nexport interface CategoryComponentData {\n  categoryId?: number;\n  category?: Category;\n  products?: Product[];\n}\n\nexport interface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  birthDate: string;\n  isAdmin: boolean;\n}\n\nexport interface Storage {\n  getItem(key: string): string | null;\n  setItem(key: string, value: string): void;\n  removeItem(key: string): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductDetailComponent.html":{"url":"components/ProductDetailComponent.html","title":"component - ProductDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/product-detail/product-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product-detail.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                location\n                            \n                            \n                                pageTitle\n                            \n                            \n                                    Optional\n                                product\n                            \n                            \n                                    Optional\n                                productId\n                            \n                            \n                                route\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                loadProduct\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ProductService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/product-detail/product-detail.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ProductService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail/product-detail.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadProduct\n                        \n                    \n                \n            \n            \n                \nloadProduct()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail/product-detail.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-detail/product-detail.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Location)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail/product-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Details for Product:'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail/product-detail.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail/product-detail.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail/product-detail.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail/product-detail.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-detail/product-detail.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Product } from '../../models/models';\nimport { ProductService } from '../../services/product/product.service';\n\n@Component({\n  selector: 'app-product-detail',\n  standalone: true,\n  imports: [RouterLink],\n  templateUrl: './product-detail.component.html',\n  styleUrl: './product-detail.component.scss',\n})\nexport class ProductDetailComponent implements OnInit {\n  pageTitle: string = 'Details for Product:';\n\n  productId?: number;\n  product?: Product | undefined;\n\n  route = inject(ActivatedRoute);\n  router = inject(Router);\n  location = inject(Location);\n\n  constructor(private ProductService: ProductService) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      this.productId = +params['id'];\n      this.loadProduct();\n    });\n  }\n\n  loadProduct(): void {\n    if (this.productId) {\n      this.ProductService.getProductById(this.productId).subscribe(\n        (product: Product | undefined) => {\n          this.product = product;\n        },\n        (error) => {\n          console.error('Error fetching product:', error);\n        }\n      );\n    }\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        ⬅️\n      \n      \n        🏠\n      \n    \n    \n      \n        \n          \n            \n              @if (product){\n              \n                \n              \n              \n                {{product.name}}\n                {{product.description}}\n                {{product.price}} USD\n                {{product.discount * 100}}%\n              \n              }\n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ⬅️                    🏠                                                                @if (product){                                                                          {{product.name}}                {{product.description}}                {{product.price}} USD                {{product.discount * 100}}%                            }                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProductDetailComponent', 'selector': 'app-product-detail'},{'name': 'ProductListComponent', 'selector': 'app-product-list'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductListComponent.html":{"url":"components/ProductListComponent.html","title":"component - ProductListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/product-list/product-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product-list.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                categoryId\n                            \n                            \n                                products\n                            \n                            \n                                route\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                goToGameDetail\n                            \n                            \n                                loadProducts\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ProductService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/product-list/product-list.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ProductService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-list/product-list.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToGameDetail\n                        \n                    \n                \n            \n            \n                \ngoToGameDetail(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-list/product-list.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadProducts\n                        \n                    \n                \n            \n            \n                \nloadProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-list/product-list.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-list/product-list.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-list/product-list.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-list/product-list.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-list/product-list.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-list/product-list.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { Category, Product } from '../../models/models';\nimport { ProductService } from '../../services/product/product.service';\n\n@Component({\n  selector: 'app-product-list',\n  standalone: true,\n  imports: [RouterLink],\n  templateUrl: './product-list.component.html',\n  styleUrl: './product-list.component.scss',\n})\nexport class ProductListComponent implements OnInit {\n  products: Product[] = [];\n  categoryId?: number;\n\n  route = inject(ActivatedRoute);\n  router = inject(Router);\n\n  constructor(private ProductService: ProductService) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      this.categoryId = +params['id'];\n      if (this.categoryId) {\n        this.loadProducts();\n      } else {\n        console.error('Invalid categoryId:', params['id']);\n      }\n    });\n  }\n\n  loadProducts(): void {\n    if (this.categoryId) {\n      this.ProductService.getProductsByCategory(this.categoryId).subscribe(\n        (products: Product[]) => {\n          this.products = products;\n        },\n        (error) => {\n          console.error('Error fetching products:', error);\n        }\n      );\n    }\n  }\n\n  goToGameDetail(productId: number) {\n    this.router.navigate(['/product'], {\n      queryParams: { id: productId },\n    });\n  }\n\n  goBack() {\n    this.router.navigate(['/']);\n  }\n}\n\n    \n\n    \n        \n  \n    ⬅️\n    \n      \n        @if (products) {\n        @for(prod of products; track prod.id){\n        \n          \n             -->\n            \n              \n            \n            \n              \n                {{prod.name}}\n              \n            \n            {{prod.description}}\n            {{prod.price}} USD\n            {{prod.discount * 100}}%\n          \n        \n        }\n        }\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      ⬅️                  @if (products) {        @for(prod of products; track prod.id){                               -->                                                                                {{prod.name}}                                      {{prod.description}}            {{prod.price}} USD            {{prod.discount * 100}}%                          }        }            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProductDetailComponent', 'selector': 'app-product-detail'},{'name': 'ProductListComponent', 'selector': 'app-product-list'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/product/product.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for handling product-related operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dataUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCategories\n                            \n                            \n                                getProductById\n                            \n                            \n                                getProductsByCategory\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/product/product.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCategories\n                        \n                    \n                \n            \n            \n                \ngetCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product/product.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Retrieves categories from the data source.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable array of Category objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductById\n                        \n                    \n                \n            \n            \n                \ngetProductById(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product/product.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Retrieves a product by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the product to fetch.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable of the Product object if found, otherwise undefined.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductsByCategory\n                        \n                    \n                \n            \n            \n                \ngetProductsByCategory(categoryId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product/product.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Retrieves products belonging to a specific category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the category for which products are fetched.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable array of Product objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product/product.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Handles HTTP errors.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The error object received from the HTTP call.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Observable that emits the error.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:4200/data/products.json'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/product/product.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map, catchError, throwError } from 'rxjs';\nimport { Category, Product } from '../../models/models';\n\n/**\n * Service responsible for handling product-related operations.\n */\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private dataUrl = 'http://localhost:4200/data/products.json';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Retrieves categories from the data source.\n   * @returns An Observable array of Category objects.\n   */\n\n  getCategories(): Observable {\n    return this.http\n      .get(this.dataUrl)\n      .pipe(\n        map((response) => response.data.categories), // Access categories array\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * Retrieves products belonging to a specific category.\n   * @param categoryId The ID of the category for which products are fetched.\n   * @returns An Observable array of Product objects.\n   */\n\n  getProductsByCategory(categoryId: number): Observable {\n    return this.http\n      .get(this.dataUrl)\n      .pipe(\n        map((response) => {\n          const category = response.data.categories.find(\n            (c) => c.id === categoryId\n          );\n          return category ? category.games : [];\n        }),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * Retrieves a product by its ID.\n   * @param productId The ID of the product to fetch.\n   * @returns An Observable of the Product object if found, otherwise undefined.\n   */\n\n  getProductById(productId: number): Observable {\n    return this.http\n      .get(this.dataUrl)\n      .pipe(\n        map((response) => {\n          let product: Product | undefined;\n          response.data.categories.forEach((category) => {\n            const foundProduct = category.games.find((p) => p.id === productId);\n            if (foundProduct) {\n              product = foundProduct;\n            }\n          });\n          return product;\n        }),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * Handles HTTP errors.\n   * @param error The error object received from the HTTP call.\n   * @returns An Observable that emits the error.\n   */\n\n  private handleError(error: any) {\n    console.error('An error occurred:', error);\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./profile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/profile/profile.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  standalone: true,\n  imports: [RouterLink],\n  templateUrl: './profile.component.html',\n  styleUrl: './profile.component.scss',\n})\nexport class ProfileComponent implements OnInit {\n  currentUser: any;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.getCurrentUser();\n  }\n}\n\n    \n\n    \n        \n  \n    ⬅️\n\n    \n      Name: {{currentUser.username }}\n      Email:  {{currentUser.email }}\n      Birthdate: {{currentUser.birthDate }}\n    \n    \n      Edit Profile\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      ⬅️          Name: {{currentUser.username }}      Email:  {{currentUser.email }}      Birthdate: {{currentUser.birthDate }}              Edit Profile      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProductDetailComponent', 'selector': 'app-product-detail'},{'name': 'ProductListComponent', 'selector': 'app-product-list'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecoverComponent.html":{"url":"components/RecoverComponent.html","title":"component - RecoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/recover/recover.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recover\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./recover.component.html\n            \n\n\n\n            \n                styleUrl\n                ./recover.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                messageType\n                            \n                            \n                                recoverForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                showMessage\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/recover/recover.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recover/recover.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMessage\n                        \n                    \n                \n            \n            \n                \nshowMessage(message: string, type: \"success\" | \"error\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recover/recover.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recover/recover.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recover/recover.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"success\" | \"error\"\n\n                    \n                \n                \n                    \n                        Default value : 'success'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recover/recover.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoverForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recover/recover.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport {\n  ReactiveFormsModule,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-recover',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterLink],\n  templateUrl: './recover.component.html',\n  styleUrl: './recover.component.scss',\n})\nexport class RecoverComponent implements OnInit {\n  recoverForm!: FormGroup;\n  message: string = '';\n  messageType: 'success' | 'error' = 'success';\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private el: ElementRef\n  ) {}\n\n  ngOnInit(): void {\n    this.recoverForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  submitForm() {\n    if (this.recoverForm.valid) {\n      // console.log('Recover form submitted', this.recoverForm.value.email);\n\n      this.showMessage('Password recovery email sent successfully', 'success');\n\n      this.recoverForm.reset();\n    } else {\n      this.recoverForm.markAllAsTouched();\n    }\n  }\n\n  showMessage(message: string, type: 'success' | 'error') {\n    this.message = message;\n    this.messageType = type;\n\n    // Clear message after 5 seconds\n    setTimeout(() => {\n      this.message = '';\n    }, 5000);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ message }}\n        \n        \n          \n            Email address\n            \n            \n              Email is required.\n              Invalid email format.\n            \n          \n          Recover Account\n        \n        \n          Go Back to Login\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ message }}                                      Email address                                      Email is required.              Invalid email format.                                Recover Account                          Go Back to Login                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProductDetailComponent', 'selector': 'app-product-detail'},{'name': 'ProductListComponent', 'selector': 'app-product-list'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                markFormGroupTouched\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetForm\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, el: ElementRef, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register/register.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        markFormGroupTouched\n                        \n                    \n                \n            \n            \n                \nmarkFormGroupTouched(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport {\n  ReactiveFormsModule,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { ageValidator } from '../../validators/age.validator';\nimport { confirmPasswordValidator } from '../../validators/password.validator';\nimport { AuthService } from '../../services/auth/auth.service';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterLink],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss',\n})\nexport class RegisterComponent implements OnInit {\n  registerForm!: FormGroup;\n  // users: any[] = [];\n  // submitted = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private el: ElementRef,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.registerForm = this.fb.group(\n      {\n        username: ['', [Validators.required, Validators.minLength(3)]],\n        email: ['', [Validators.required, Validators.email]],\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(6),\n            // Validators.pattern(/^(?=.*\\d)(?=.*[A-Z]).{6,18}$/),\n          ],\n        ],\n        confirmPassword: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(6),\n            // Validators.pattern(/^(?=.*\\d)(?=.*[A-Z]).{6,18}$/),\n          ],\n        ],\n        birthDate: ['', [Validators.required, ageValidator(14)]],\n        isAdmin: [false],\n        address: [''],\n      },\n      {\n        validator: confirmPasswordValidator,\n      }\n    );\n  }\n\n  submitForm(): void {\n    if (this.registerForm.valid) {\n      const { email, password, username, birthDate } = this.registerForm.value;\n      this.authService.registerUser(email, password, username, birthDate);\n      this.router.navigate(['/home']);\n    } else {\n      // form validation errors\n      this.markFormGroupTouched(this.registerForm);\n    }\n  }\n\n  resetForm() {\n    this.registerForm.reset({\n      email: '',\n      password: '',\n      confirmPassword: '',\n      isAdmin: false,\n      address: '',\n    });\n  }\n\n  markFormGroupTouched(formGroup: FormGroup): void {\n    Object.values(formGroup.controls).forEach((control) => {\n      control.markAsTouched();\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    🏠\n    \n      \n        \n          \n            Username\n            \n            \n              Username is required.\n              Username must be at least 3 characters\n                long.\n              \n            \n          \n          \n            Email\n            \n            \n              Email is required.\n              Invalid email format.\n            \n          \n\n          \n            Password\n            \n            \n              Password is required.\n              Password must be at least 6 characters\n                long.\n              \n            \n          \n          \n            Confirm Password\n            \n            \n              Password is required.\n              Password must be at least 6\n                characters long.\n              \n              \n                Passwords do not match.\n              \n            \n          \n          \n            BirthDate\n            \n            \n              Birth Date is required.\n              \n                Must be at least {{ registerForm.get('birthDate')?.errors?.['minAge'].requiredAge }} years old (you\n                are {{ registerForm.get('birthDate')?.errors?.['minAge'].actualAge }}).\n              \n            \n          \n\n\n          \n            \n            \n              Admin (Optional)\n            \n          \n\n\n          \n            Address (Optional)\n            \n          \n\n          Register\n\n          Reset\n        \n        \n          Do you already have an account? Login\n        \n      \n    \n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      🏠                                        Username                                      Username is required.              Username must be at least 3 characters                long.                                                          Email                                      Email is required.              Invalid email format.                                            Password                                      Password is required.              Password must be at least 6 characters                long.                                                          Confirm Password                                      Password is required.              Password must be at least 6                characters long.                                            Passwords do not match.                                                          BirthDate                                      Birth Date is required.                              Must be at least {{ registerForm.get(\\'birthDate\\')?.errors?.[\\'minAge\\'].requiredAge }} years old (you                are {{ registerForm.get(\\'birthDate\\')?.errors?.[\\'minAge\\'].actualAge }}).                                                                                    Admin (Optional)                                            Address (Optional)                                Register          Reset                          Do you already have an account? Login                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProductDetailComponent', 'selector': 'app-product-detail'},{'name': 'ProductListComponent', 'selector': 'app-product-list'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverComponent', 'selector': 'app-recover'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Storage.html":{"url":"interfaces/Storage.html","title":"interface - Storage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Storage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getItem\n                                    \n                                \n                                \n                                    \n                                        removeItem\n                                    \n                                \n                                \n                                    \n                                        setItem\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/models/models.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/models/models.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/models/models.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Product {\n  id: number;\n  name: string;\n  image: string;\n  description: string;\n  price: number;\n  discount: number;\n}\n\nexport interface Category {\n  id: number;\n  name: string;\n  image: string;\n  games: Product[];\n}\n\nexport interface CategoryComponentData {\n  categoryId?: number;\n  category?: Category;\n  products?: Product[];\n}\n\nexport interface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  birthDate: string;\n  isAdmin: boolean;\n}\n\nexport interface Storage {\n  getItem(key: string): string | null;\n  setItem(key: string, value: string): void;\n  removeItem(key: string): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/storage/storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getItem\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/storage/storage.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Storage | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/storage/storage.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Storage } from '../../models/models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StorageService {\n  private storage: Storage | null = null;\n\n  constructor() {\n    try {\n      const testKey = '__test__';\n      localStorage.setItem(testKey, 'test');\n      localStorage.removeItem(testKey);\n      this.storage = localStorage;\n    } catch (e) {\n      console.warn('LocalStorage is not available. Using in-memory storage.');\n      this.storage = {\n        getItem: (key: string) => null,\n        setItem: (key: string, value: any) => {},\n        removeItem: (key: string) => {},\n      };\n    }\n  }\n\n  setItem(key: string, value: any): void {\n    this.storage?.setItem(key, JSON.stringify(value));\n  }\n\n  getItem(key: string): any {\n    const item = this.storage?.getItem(key);\n    return item ? JSON.parse(item) : null;\n  }\n\n  removeItem(key: string): void {\n    this.storage?.removeItem(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            birthDate\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isAdmin\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAdmin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAdmin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Product {\n  id: number;\n  name: string;\n  image: string;\n  description: string;\n  price: number;\n  discount: number;\n}\n\nexport interface Category {\n  id: number;\n  name: string;\n  image: string;\n  games: Product[];\n}\n\nexport interface CategoryComponentData {\n  categoryId?: number;\n  category?: Category;\n  products?: Product[];\n}\n\nexport interface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  birthDate: string;\n  isAdmin: boolean;\n}\n\nexport interface Storage {\n  getItem(key: string): string | null;\n  setItem(key: string, value: string): void;\n  removeItem(key: string): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dataUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserById\n                            \n                            \n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user/user.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user/user.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:4200/data/users.json'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map, catchError, throwError } from 'rxjs';\nimport { User } from '../../models/models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private dataUrl = 'http://localhost:4200/data/users.json';\n\n  constructor(private http: HttpClient) {}\n\n  getUsers(): Observable {\n    return this.http.get(`${this.dataUrl}`);\n  }\n\n  getUserById(id: number): Observable {\n    return this.http.get(`${this.dataUrl}/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/categories/categories.component.ts\n            \n            component\n            CategoriesComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/edit-profile/edit-profile.component.ts\n            \n            component\n            EditProfileComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/product-detail/product-detail.component.ts\n            \n            component\n            ProductDetailComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/product-list/product-list.component.ts\n            \n            component\n            ProductListComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/recover/recover.component.ts\n            \n            component\n            RecoverComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/shared/layout/layout.component.ts\n            \n            component\n            LayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/models.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/models.ts\n            \n            interface\n            CategoryComponentData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/models.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/models.ts\n            \n            interface\n            Storage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/models.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/services/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/services/storage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/validators/age.validator.ts\n            \n            function\n            ageValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/validators/password.validator.ts\n            \n            function\n            confirmPasswordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/platform-server : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @angular/ssr : ^18.0.3\n        \n            @compodoc/compodoc : ^1.1.25\n        \n            bootstrap : ^5.3.3\n        \n            date-fns : ^3.6.0\n        \n            express : ^4.18.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ageValidator   (src/.../age.validator.ts)\n                        \n                        \n                            confirmPasswordValidator   (src/.../password.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/validators/age.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ageValidator\n                        \n                    \n                \n            \n            \n                \nageValidator(minAge: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                minAge\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/validators/password.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        confirmPasswordValidator\n                        \n                    \n                \n            \n            \n                \nconfirmPasswordValidator(group: FormGroup)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nStoreApp\nThis project was generated with Angular CLI version 18.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideClientHydration(),\n    provideHttpClient(),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
